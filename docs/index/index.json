{"interfaceLanguages":{"swift":[{"children":[{"title":"Classes","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/flowkit\/flownavigationstackv1\/init()","title":"init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/flowkit\/flownavigationstackv1\/presentedview","title":"var presentedView: (any View)?","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/flowkit\/flownavigationstackv1\/objectwillchange","title":"var objectWillChange: ObservableObjectPublisher","type":"property"}],"path":"\/documentation\/flowkit\/flownavigationstackv1\/observableobject-implementations","title":"ObservableObject Implementations","type":"symbol"}],"path":"\/documentation\/flowkit\/flownavigationstackv1","title":"FlowNavigationStackV1","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/flowkit\/flownavigationstackv2\/init()","title":"init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/flowkit\/flownavigationstackv2\/presentedview","title":"var presentedView: (any View)?","type":"property"},{"path":"\/documentation\/flowkit\/flownavigationstackv2\/routes","title":"var routes: [String]","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/flowkit\/flownavigationstackv2\/objectwillchange","title":"var objectWillChange: ObservableObjectPublisher","type":"property"}],"path":"\/documentation\/flowkit\/flownavigationstackv2\/observableobject-implementations","title":"ObservableObject Implementations","type":"symbol"}],"path":"\/documentation\/flowkit\/flownavigationstackv2","title":"FlowNavigationStackV2","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/flowkit\/inoutempty\/init()","title":"init()","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/flowkit\/inoutempty\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/flowkit\/inoutempty\/==(_:_:)","title":"static func == (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/flowkit\/inoutempty\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/flowkit\/inoutempty\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/flowkit\/inoutempty\/hashable-implementations","title":"Hashable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/flowkit\/inoutempty\/id","title":"var id: ObjectIdentifier","type":"property"}],"path":"\/documentation\/flowkit\/inoutempty\/identifiable-implementations","title":"Identifiable Implementations","type":"symbol"}],"path":"\/documentation\/flowkit\/inoutempty","title":"InOutEmpty","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/flowkit\/navigationswiftui\/init()","title":"init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/flowkit\/navigationswiftui\/action","title":"var action: PassthroughSubject<NavigationAction, Never>","type":"property"},{"path":"\/documentation\/flowkit\/navigationswiftui\/items","title":"var items: NavigationItems","type":"property"},{"path":"\/documentation\/flowkit\/navigationswiftui\/routes","title":"var routes: [String]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/flowkit\/navigationswiftui\/dismiss()","title":"func dismiss()","type":"method"},{"path":"\/documentation\/flowkit\/navigationswiftui\/navigate(route:)","title":"func navigate(route: some Routable) throws","type":"method"},{"path":"\/documentation\/flowkit\/navigationswiftui\/navigate(routestring:)","title":"func navigate(routeString: String)","type":"method"},{"path":"\/documentation\/flowkit\/navigationswiftui\/pop()","title":"func pop()","type":"method"},{"path":"\/documentation\/flowkit\/navigationswiftui\/poptoflow()","title":"func popToFlow()","type":"method"},{"path":"\/documentation\/flowkit\/navigationswiftui\/poptoroot()","title":"func popToRoot()","type":"method"},{"path":"\/documentation\/flowkit\/navigationswiftui\/present(route:)","title":"func present(route: some Routable) throws","type":"method"},{"path":"\/documentation\/flowkit\/navigationswiftui\/present(routestring:)","title":"func present(routeString: String)","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/flowkit\/navigationswiftui\/flow(route:)","title":"func flow(route: some Routable) throws -> (any FlowProtocol)","type":"method"},{"path":"\/documentation\/flowkit\/navigationswiftui\/navigate(view:)","title":"func navigate(view: some Navigable)","type":"method"},{"path":"\/documentation\/flowkit\/navigationswiftui\/present(view:)","title":"func present(view: some Presentable)","type":"method"},{"path":"\/documentation\/flowkit\/navigationswiftui\/register(route:with:)","title":"func register(route: some Routable, with: () -> (any Navigable))","type":"method"}],"path":"\/documentation\/flowkit\/navigationswiftui\/navigationprotocol-implementations","title":"NavigationProtocol Implementations","type":"symbol"}],"path":"\/documentation\/flowkit\/navigationswiftui","title":"NavigationSwiftUI","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/flowkit\/navigationuikit\/action","title":"var action: PassthroughSubject<NavigationAction, Never>","type":"property"},{"path":"\/documentation\/flowkit\/navigationuikit\/items","title":"var items: NavigationItems","type":"property"},{"path":"\/documentation\/flowkit\/navigationuikit\/navigationcontroller","title":"var navigationController: UINavigationController?","type":"property"},{"path":"\/documentation\/flowkit\/navigationuikit\/routes","title":"var routes: [String]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/flowkit\/navigationuikit\/dismiss()","title":"func dismiss()","type":"method"},{"path":"\/documentation\/flowkit\/navigationuikit\/navigate(route:)","title":"func navigate(route: some Routable) throws","type":"method"},{"path":"\/documentation\/flowkit\/navigationuikit\/navigate(routestring:)","title":"func navigate(routeString: String)","type":"method"},{"path":"\/documentation\/flowkit\/navigationuikit\/navigationcontroller(_:willshow:animated:)","title":"func navigationController(UINavigationController, willShow: UIViewController, animated: Bool)","type":"method"},{"path":"\/documentation\/flowkit\/navigationuikit\/pop()","title":"func pop()","type":"method"},{"path":"\/documentation\/flowkit\/navigationuikit\/poptoflow()","title":"func popToFlow()","type":"method"},{"path":"\/documentation\/flowkit\/navigationuikit\/poptoroot()","title":"func popToRoot()","type":"method"},{"path":"\/documentation\/flowkit\/navigationuikit\/present(route:)-j4st","title":"func present(route: String) throws","type":"method"},{"path":"\/documentation\/flowkit\/navigationuikit\/present(route:)-u33f","title":"func present(route: some Routable) throws","type":"method"},{"path":"\/documentation\/flowkit\/navigationuikit\/present(routestring:)","title":"func present(routeString: String)","type":"method"},{"path":"\/documentation\/flowkit\/navigationuikit\/push(route:)","title":"func push(route: String) throws","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/flowkit\/navigationuikit\/flow(route:)","title":"func flow(route: some Routable) throws -> (any FlowProtocol)","type":"method"},{"path":"\/documentation\/flowkit\/navigationuikit\/navigate(view:)","title":"func navigate(view: some Navigable)","type":"method"},{"path":"\/documentation\/flowkit\/navigationuikit\/present(view:)","title":"func present(view: some Presentable)","type":"method"},{"path":"\/documentation\/flowkit\/navigationuikit\/register(route:with:)","title":"func register(route: some Routable, with: () -> (any Navigable))","type":"method"}],"path":"\/documentation\/flowkit\/navigationuikit\/navigationprotocol-implementations","title":"NavigationProtocol Implementations","type":"symbol"}],"path":"\/documentation\/flowkit\/navigationuikit","title":"NavigationUIKit","type":"class"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/flowkit\/resolver\/args\/init(_:)","title":"init(Any?)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/flowkit\/resolver\/args\/callasfunction()","title":"func callAsFunction<T>() -> T","type":"method"},{"path":"\/documentation\/flowkit\/resolver\/args\/callasfunction(_:)","title":"func callAsFunction<T>(String) -> T","type":"method"},{"path":"\/documentation\/flowkit\/resolver\/args\/get()","title":"func get<T>() -> T","type":"method"},{"path":"\/documentation\/flowkit\/resolver\/args\/get(_:)","title":"func get<T>(String) -> T","type":"method"},{"path":"\/documentation\/flowkit\/resolver\/args\/optional()","title":"func optional<T>() -> T?","type":"method"},{"path":"\/documentation\/flowkit\/resolver\/args\/optional(_:)","title":"func optional<T>(String) -> T?","type":"method"}],"path":"\/documentation\/flowkit\/resolver\/args","title":"Resolver.Args","type":"struct"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/flowkit\/resolver\/name\/==(_:_:)","title":"static func == (Resolver.Name, Resolver.Name) -> Bool","type":"op"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/flowkit\/resolver\/name\/init(_:)","title":"init(String)","type":"init"},{"path":"\/documentation\/flowkit\/resolver\/name\/init(stringliteral:)","title":"init(stringLiteral: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/flowkit\/resolver\/name\/rawvalue","title":"let rawValue: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/flowkit\/resolver\/name\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/flowkit\/resolver\/name\/name(fromstring:)","title":"static func name(fromString: String?) -> Resolver.Name?","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/flowkit\/resolver\/name\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/flowkit\/resolver\/name\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/flowkit\/resolver\/name\/init(extendedgraphemeclusterliteral:)","title":"init(extendedGraphemeClusterLiteral: Self.StringLiteralType)","type":"init"}],"path":"\/documentation\/flowkit\/resolver\/name\/expressiblebyextendedgraphemeclusterliteral-implementations","title":"ExpressibleByExtendedGraphemeClusterLiteral Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/flowkit\/resolver\/name\/init(unicodescalarliteral:)","title":"init(unicodeScalarLiteral: Self.ExtendedGraphemeClusterLiteralType)","type":"init"}],"path":"\/documentation\/flowkit\/resolver\/name\/expressiblebyunicodescalarliteral-implementations","title":"ExpressibleByUnicodeScalarLiteral Implementations","type":"symbol"}],"path":"\/documentation\/flowkit\/resolver\/name","title":"Resolver.Name","type":"struct"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/flowkit\/resolver\/init(child:)","title":"init(child: Resolver?)","type":"init"},{"path":"\/documentation\/flowkit\/resolver\/init(parent:)","title":"init(parent: Resolver)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/flowkit\/resolver\/cache","title":"var cache: ResolverScope","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/flowkit\/resolver\/add(child:)","title":"func add(child: Resolver)","type":"method"},{"path":"\/documentation\/flowkit\/resolver\/optional(_:name:args:)-swift.method","title":"func optional<Service>(Service.Type, name: Resolver.Name?, args: Any?) -> Service?","type":"method"},{"path":"\/documentation\/flowkit\/resolver\/register(_:name:factory:)-4ofj7","title":"func register<Service>(Service.Type, name: Resolver.Name?, factory: ResolverFactoryArgumentsN<Service>) -> ResolverOptions<Service>","type":"method"},{"path":"\/documentation\/flowkit\/resolver\/register(_:name:factory:)-7i88p","title":"func register<Service>(Service.Type, name: Resolver.Name?, factory: ResolverFactory<Service>) -> ResolverOptions<Service>","type":"method"},{"path":"\/documentation\/flowkit\/resolver\/register(_:name:factory:)-820td","title":"func register<Service>(Service.Type, name: Resolver.Name?, factory: ResolverFactoryResolver<Service>) -> ResolverOptions<Service>","type":"method"},{"path":"\/documentation\/flowkit\/resolver\/registerservices()","title":"func registerServices()","type":"method"},{"path":"\/documentation\/flowkit\/resolver\/resolve(_:name:args:)-swift.method","title":"func resolve<Service>(Service.Type, name: Resolver.Name?, args: Any?) -> Service","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/flowkit\/resolver\/defaultscope","title":"static var defaultScope: ResolverScope","type":"property"},{"path":"\/documentation\/flowkit\/resolver\/main","title":"static var main: Resolver","type":"property"},{"path":"\/documentation\/flowkit\/resolver\/registerservices","title":"static var registerServices: (() -> Void)?","type":"property"},{"path":"\/documentation\/flowkit\/resolver\/root","title":"static var root: Resolver","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/flowkit\/resolver\/optional(_:name:args:)-swift.type.method","title":"static func optional<Service>(Service.Type, name: Resolver.Name?, args: Any?) -> Service?","type":"method"},{"path":"\/documentation\/flowkit\/resolver\/register(_:name:factory:)-7miqx","title":"static func register<Service>(Service.Type, name: Resolver.Name?, factory: ResolverFactoryArgumentsN<Service>) -> ResolverOptions<Service>","type":"method"},{"path":"\/documentation\/flowkit\/resolver\/register(_:name:factory:)-8gexo","title":"static func register<Service>(Service.Type, name: Resolver.Name?, factory: ResolverFactory<Service>) -> ResolverOptions<Service>","type":"method"},{"path":"\/documentation\/flowkit\/resolver\/register(_:name:factory:)-bh17","title":"static func register<Service>(Service.Type, name: Resolver.Name?, factory: ResolverFactoryResolver<Service>) -> ResolverOptions<Service>","type":"method"},{"path":"\/documentation\/flowkit\/resolver\/reset()","title":"static func reset()","type":"method"},{"path":"\/documentation\/flowkit\/resolver\/resolve(_:name:args:)-swift.type.method","title":"static func resolve<Service>(Service.Type, name: Resolver.Name?, args: Any?) -> Service","type":"method"}],"path":"\/documentation\/flowkit\/resolver","title":"Resolver","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/flowkit\/resolverregistration\/init(resolver:key:name:factory:)","title":"init(resolver: Resolver, key: Int, name: Resolver.Name?, factory: ResolverFactoryAnyArguments<Service>)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/flowkit\/resolverregistration\/cachekey","title":"let cacheKey: String","type":"property"},{"path":"\/documentation\/flowkit\/resolverregistration\/key","title":"let key: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/flowkit\/resolverregistration\/instantiate(resolver:args:)","title":"func instantiate(resolver: Resolver, args: Any?) -> Service?","type":"method"},{"path":"\/documentation\/flowkit\/resolverregistration\/resolve(resolver:args:)","title":"func resolve(resolver: Resolver, args: Any?) -> Service?","type":"method"},{"path":"\/documentation\/flowkit\/resolverregistration\/update(factory:)","title":"func update(factory: (ResolverFactoryAnyArguments<Service>) -> ResolverFactoryAnyArguments<Service>)","type":"method"}],"path":"\/documentation\/flowkit\/resolverregistration","title":"ResolverRegistration","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/flowkit\/resolverscope\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/flowkit\/resolverscope\/reset()","title":"func reset()","type":"method"},{"path":"\/documentation\/flowkit\/resolverscope\/resolve(registration:resolver:args:)","title":"func resolve<Service>(registration: ResolverRegistration<Service>, resolver: Resolver, args: Any?) -> Service?","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/flowkit\/resolverscope\/application","title":"static let application: ResolverScopeCache","type":"property"},{"path":"\/documentation\/flowkit\/resolverscope\/cached","title":"static let cached: ResolverScopeCache","type":"property"},{"path":"\/documentation\/flowkit\/resolverscope\/container","title":"static let container: ResolverScopeContainer","type":"property"},{"path":"\/documentation\/flowkit\/resolverscope\/graph","title":"static let graph: ResolverScopeGraph","type":"property"},{"path":"\/documentation\/flowkit\/resolverscope\/shared","title":"static let shared: ResolverScopeShare","type":"property"},{"path":"\/documentation\/flowkit\/resolverscope\/unique","title":"static let unique: ResolverScope","type":"property"}],"path":"\/documentation\/flowkit\/resolverscope","title":"ResolverScope","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/flowkit\/resolverscopecache\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/flowkit\/resolverscopecache\/reset()","title":"func reset()","type":"method"},{"path":"\/documentation\/flowkit\/resolverscopecache\/resolve(registration:resolver:args:)","title":"func resolve<Service>(registration: ResolverRegistration<Service>, resolver: Resolver, args: Any?) -> Service?","type":"method"}],"path":"\/documentation\/flowkit\/resolverscopecache","title":"ResolverScopeCache","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/flowkit\/resolverscopecontainer\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/flowkit\/resolverscopecontainer\/resolve(registration:resolver:args:)","title":"func resolve<Service>(registration: ResolverRegistration<Service>, resolver: Resolver, args: Any?) -> Service?","type":"method"}],"path":"\/documentation\/flowkit\/resolverscopecontainer","title":"ResolverScopeContainer","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/flowkit\/resolverscopegraph\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/flowkit\/resolverscopegraph\/reset()","title":"func reset()","type":"method"},{"path":"\/documentation\/flowkit\/resolverscopegraph\/resolve(registration:resolver:args:)","title":"func resolve<Service>(registration: ResolverRegistration<Service>, resolver: Resolver, args: Any?) -> Service?","type":"method"}],"path":"\/documentation\/flowkit\/resolverscopegraph","title":"ResolverScopeGraph","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/flowkit\/resolverscopeshare\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/flowkit\/resolverscopeshare\/reset()","title":"func reset()","type":"method"},{"path":"\/documentation\/flowkit\/resolverscopeshare\/resolve(registration:resolver:args:)","title":"func resolve<Service>(registration: ResolverRegistration<Service>, resolver: Resolver, args: Any?) -> Service?","type":"method"}],"path":"\/documentation\/flowkit\/resolverscopeshare","title":"ResolverScopeShare","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/flowkit\/timerstream\/countdown","title":"var countdown: Int","type":"property"},{"path":"\/documentation\/flowkit\/timerstream\/isrunning","title":"var isRunning: Bool","type":"property"},{"path":"\/documentation\/flowkit\/timerstream\/stream","title":"var stream: AsyncStream<Int>","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/flowkit\/timerstream\/makeasynciterator()","title":"func makeAsyncIterator() -> AsyncStream<Int>.Iterator","type":"method"},{"path":"\/documentation\/flowkit\/timerstream\/start(countdown:)","title":"func start(countdown: Int)","type":"method"},{"path":"\/documentation\/flowkit\/timerstream\/stop()","title":"func stop()","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/flowkit\/timerstream\/element","title":"TimerStream.Element","type":"typealias"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/flowkit\/timerstream\/allsatisfy(_:)","title":"func allSatisfy((Self.Element) async throws -> Bool) async rethrows -> Bool","type":"method"},{"path":"\/documentation\/flowkit\/timerstream\/compactmap(_:)-24jqi","title":"func compactMap<ElementOfResult>((Self.Element) async throws -> ElementOfResult?) -> AsyncThrowingCompactMapSequence<Self, ElementOfResult>","type":"method"},{"path":"\/documentation\/flowkit\/timerstream\/compactmap(_:)-7mua4","title":"func compactMap<ElementOfResult>((Self.Element) async -> ElementOfResult?) -> AsyncCompactMapSequence<Self, ElementOfResult>","type":"method"},{"path":"\/documentation\/flowkit\/timerstream\/contains(_:)","title":"func contains(Self.Element) async rethrows -> Bool","type":"method"},{"path":"\/documentation\/flowkit\/timerstream\/contains(where:)","title":"func contains(where: (Self.Element) async throws -> Bool) async rethrows -> Bool","type":"method"},{"path":"\/documentation\/flowkit\/timerstream\/drop(while:)","title":"func drop(while: (Self.Element) async -> Bool) -> AsyncDropWhileSequence<Self>","type":"method"},{"path":"\/documentation\/flowkit\/timerstream\/dropfirst(_:)","title":"func dropFirst(Int) -> AsyncDropFirstSequence<Self>","type":"method"},{"path":"\/documentation\/flowkit\/timerstream\/filter(_:)","title":"func filter((Self.Element) async -> Bool) -> AsyncFilterSequence<Self>","type":"method"},{"path":"\/documentation\/flowkit\/timerstream\/first(where:)","title":"func first(where: (Self.Element) async throws -> Bool) async rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/flowkit\/timerstream\/flatmap(_:)-10dp8","title":"func flatMap<SegmentOfResult>((Self.Element) async -> SegmentOfResult) -> AsyncFlatMapSequence<Self, SegmentOfResult>","type":"method"},{"path":"\/documentation\/flowkit\/timerstream\/flatmap(_:)-465pe","title":"func flatMap<SegmentOfResult>((Self.Element) async throws -> SegmentOfResult) -> AsyncThrowingFlatMapSequence<Self, SegmentOfResult>","type":"method"},{"path":"\/documentation\/flowkit\/timerstream\/map(_:)-3np6t","title":"func map<Transformed>((Self.Element) async throws -> Transformed) -> AsyncThrowingMapSequence<Self, Transformed>","type":"method"},{"path":"\/documentation\/flowkit\/timerstream\/map(_:)-eb0l","title":"func map<Transformed>((Self.Element) async -> Transformed) -> AsyncMapSequence<Self, Transformed>","type":"method"},{"path":"\/documentation\/flowkit\/timerstream\/max()","title":"func max() async rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/flowkit\/timerstream\/max(by:)","title":"func max(by: (Self.Element, Self.Element) async throws -> Bool) async rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/flowkit\/timerstream\/min()","title":"func min() async rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/flowkit\/timerstream\/min(by:)","title":"func min(by: (Self.Element, Self.Element) async throws -> Bool) async rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/flowkit\/timerstream\/prefix(_:)","title":"func prefix(Int) -> AsyncPrefixSequence<Self>","type":"method"},{"path":"\/documentation\/flowkit\/timerstream\/prefix(while:)","title":"func prefix(while: (Self.Element) async -> Bool) rethrows -> AsyncPrefixWhileSequence<Self>","type":"method"},{"path":"\/documentation\/flowkit\/timerstream\/reduce(_:_:)","title":"func reduce<Result>(Result, (Result, Self.Element) async throws -> Result) async rethrows -> Result","type":"method"},{"path":"\/documentation\/flowkit\/timerstream\/reduce(into:_:)","title":"func reduce<Result>(into: Result, (inout Result, Self.Element) async throws -> Void) async rethrows -> Result","type":"method"}],"path":"\/documentation\/flowkit\/timerstream\/asyncsequence-implementations","title":"AsyncSequence Implementations","type":"symbol"}],"path":"\/documentation\/flowkit\/timerstream","title":"TimerStream","type":"class"},{"title":"Protocols","type":"groupMarker"},{"children":[{"title":"Associated Types","type":"groupMarker"},{"path":"\/documentation\/flowkit\/coordinatorjoinprotocol\/event-swift.associatedtype","title":"Event","type":"associatedtype"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/flowkit\/coordinatorjoinprotocol\/event-swift.property","title":"var event: Event","type":"property"},{"path":"\/documentation\/flowkit\/coordinatorjoinprotocol\/node","title":"var node: any Nodable","type":"property"}],"path":"\/documentation\/flowkit\/coordinatorjoinprotocol","title":"CoordinatorJoinProtocol","type":"protocol"},{"children":[{"title":"Associated Types","type":"groupMarker"},{"path":"\/documentation\/flowkit\/coordinatornodeprotocol\/view-swift.associatedtype","title":"View","type":"associatedtype"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/flowkit\/coordinatornodeprotocol\/eventscount","title":"var eventsCount: Int","type":"property"},{"path":"\/documentation\/flowkit\/coordinatornodeprotocol\/in","title":"var `in`: View.In.Type","type":"property"},{"path":"\/documentation\/flowkit\/coordinatornodeprotocol\/joins","title":"var joins: [any CoordinatorJoinProtocol]","type":"property"},{"path":"\/documentation\/flowkit\/coordinatornodeprotocol\/view-swift.property","title":"var view: View.Type","type":"property"}],"path":"\/documentation\/flowkit\/coordinatornodeprotocol","title":"CoordinatorNodeProtocol","type":"protocol"},{"children":[{"title":"Associated Types","type":"groupMarker"},{"path":"\/documentation\/flowkit\/coordinatorprotocol\/flow-swift.associatedtype","title":"Flow","type":"associatedtype"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/flowkit\/coordinatorprotocol\/flow-swift.property","title":"var flow: Flow","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/flowkit\/coordinatorprotocol\/start(model:)","title":"func start(model: Flow.CoordinatorNode.View.In) async throws -> Flow.Model","type":"method"}],"path":"\/documentation\/flowkit\/coordinatorprotocol","title":"CoordinatorProtocol","type":"protocol"},{"children":[{"title":"Associated Types","type":"groupMarker"},{"path":"\/documentation\/flowkit\/eventjoinprotocol\/key","title":"Key","type":"associatedtype"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/flowkit\/eventjoinprotocol\/from","title":"var from: Key","type":"property"},{"path":"\/documentation\/flowkit\/eventjoinprotocol\/to","title":"var to: Event","type":"property"}],"path":"\/documentation\/flowkit\/eventjoinprotocol","title":"EventJoinProtocol","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/flowkit\/flowbehaviorprotocol\/events","title":"var events: [any EventJoinProtocol]","type":"property"},{"path":"\/documentation\/flowkit\/flowbehaviorprotocol\/isempty","title":"var isEmpty: Bool","type":"property"},{"path":"\/documentation\/flowkit\/flowbehaviorprotocol\/localizables","title":"var localizables: [any LocalizableJoinProtocol]","type":"property"},{"path":"\/documentation\/flowkit\/flowbehaviorprotocol\/outs","title":"var outs: [any OutJoinProtocol]","type":"property"}],"path":"\/documentation\/flowkit\/flowbehaviorprotocol","title":"FlowBehaviorProtocol","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/flowkit\/floweventprotocol\/associated","title":"var associated: (label: String, value: (any InOutProtocol)?)","type":"property"},{"path":"\/documentation\/flowkit\/floweventprotocol\/id","title":"var id: String","type":"property"}],"path":"\/documentation\/flowkit\/floweventprotocol","title":"FlowEventProtocol","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/flowkit\/flowkitapp\/register(_:scope:factory:)","title":"func register<Service>(Service.Type, scope: ResolverScope, factory: ResolverFactory<Service>)","type":"method"},{"path":"\/documentation\/flowkit\/flowkitapp\/registernavigationswiftui(withflowrouting:)","title":"func registerNavigationSwiftUI(withFlowRouting: Bool) -> any NavigationProtocol","type":"method"},{"path":"\/documentation\/flowkit\/flowkitapp\/registernavigationuikit(navigationcontroller:withflowrouting:)","title":"func registerNavigationUIKit(navigationController: UINavigationController, withFlowRouting: Bool) -> any NavigationProtocol","type":"method"}],"path":"\/documentation\/flowkit\/flowkitapp","title":"FlowKitApp","type":"protocol"},{"path":"\/documentation\/flowkit\/flowoutprotocol","title":"FlowOutProtocol","type":"protocol"},{"children":[{"title":"Associated Types","type":"groupMarker"},{"path":"\/documentation\/flowkit\/flowprotocol\/behavior-swift.associatedtype","title":"Behavior","type":"associatedtype"},{"path":"\/documentation\/flowkit\/flowprotocol\/coordinatornode","title":"CoordinatorNode","type":"associatedtype"},{"path":"\/documentation\/flowkit\/flowprotocol\/model-swift.associatedtype","title":"Model","type":"associatedtype"},{"path":"\/documentation\/flowkit\/flowprotocol\/route-swift.associatedtype","title":"Route","type":"associatedtype"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/flowkit\/flowprotocol\/init()","title":"init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"children":[{"children":[{"path":"\/documentation\/flowkit\/flowprotocol\/behavior-18e1a","title":"var behavior: FlowBehavior","type":"property"}],"title":"FlowProtocol Implementations","type":"groupMarker"}],"path":"\/documentation\/flowkit\/flowprotocol\/behavior-mxpn","title":"var behavior: Behavior","type":"property"},{"path":"\/documentation\/flowkit\/flowprotocol\/model-swift.property","title":"var model: Model","type":"property"},{"path":"\/documentation\/flowkit\/flowprotocol\/node","title":"var node: CoordinatorNode","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"children":[{"children":[{"path":"\/documentation\/flowkit\/flowprotocol\/onstart(model:)-7s11n","title":"func onStart(model: some InOutProtocol) async throws -> any InOutProtocol","type":"method"}],"title":"FlowProtocol Implementations","type":"groupMarker"}],"path":"\/documentation\/flowkit\/flowprotocol\/onstart(model:)-szld","title":"func onStart(model: some InOutProtocol) async throws -> any InOutProtocol","type":"method"},{"children":[{"children":[{"path":"\/documentation\/flowkit\/flowprotocol\/start()-2k8li","title":"func start() async throws -> Model","type":"method"}],"title":"FlowProtocol Implementations","type":"groupMarker"}],"path":"\/documentation\/flowkit\/flowprotocol\/start()-6mcy0","title":"func start() async throws -> Model","type":"method"},{"children":[{"children":[{"path":"\/documentation\/flowkit\/flowprotocol\/start(model:)-8sih8","title":"func start(model: some InOutProtocol) async throws -> Model","type":"method"}],"title":"FlowProtocol Implementations","type":"groupMarker"}],"path":"\/documentation\/flowkit\/flowprotocol\/start(model:)-77xca","title":"func start(model: some InOutProtocol) async throws -> Model","type":"method"},{"path":"\/documentation\/flowkit\/flowprotocol\/test()","title":"func test() async throws","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/flowkit\/flowprotocol\/route-swift.type.property","title":"static var route: Route","type":"property"}],"path":"\/documentation\/flowkit\/flowprotocol","title":"FlowProtocol","type":"protocol"},{"path":"\/documentation\/flowkit\/flowrouteprotocol","title":"FlowRouteProtocol","type":"protocol"},{"children":[{"title":"Associated Types","type":"groupMarker"},{"path":"\/documentation\/flowkit\/flowviewprotocol\/event","title":"Event","type":"associatedtype"},{"path":"\/documentation\/flowkit\/flowviewprotocol\/in","title":"In","type":"associatedtype"},{"path":"\/documentation\/flowkit\/flowviewprotocol\/out","title":"Out","type":"associatedtype"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/flowkit\/flowviewprotocol\/init(model:)","title":"init(model: In)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"children":[{"children":[{"path":"\/documentation\/flowkit\/flowviewprotocol\/events-15gd7","title":"var events: AsyncThrowingSubject<CoordinatorEvent>","type":"property"}],"title":"FlowViewProtocol Implementations","type":"groupMarker"}],"path":"\/documentation\/flowkit\/flowviewprotocol\/events-8s9o5","title":"var events: AsyncThrowingSubject<CoordinatorEvent>","type":"property"},{"path":"\/documentation\/flowkit\/flowviewprotocol\/id","title":"var id: String","type":"property"},{"path":"\/documentation\/flowkit\/flowviewprotocol\/model","title":"var model: In","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/flowkit\/flowviewprotocol\/back()","title":"func back()","type":"method"},{"path":"\/documentation\/flowkit\/flowviewprotocol\/commit(_:toroot:)","title":"func commit(some InOutProtocol, toRoot: Bool)","type":"method"},{"path":"\/documentation\/flowkit\/flowviewprotocol\/event(_:)","title":"func event(Event)","type":"method"},{"children":[{"children":[{"path":"\/documentation\/flowkit\/flowviewprotocol\/oneventchanged(_:_:)-71z5q","title":"func onEventChanged(Event, (any InOutProtocol)?) async","type":"method"}],"title":"FlowViewProtocol Implementations","type":"groupMarker"}],"path":"\/documentation\/flowkit\/flowviewprotocol\/oneventchanged(_:_:)-8x1uz","title":"func onEventChanged(Event, (any InOutProtocol)?) async","type":"method"},{"path":"\/documentation\/flowkit\/flowviewprotocol\/out(_:)","title":"func out(Out)","type":"method"},{"path":"\/documentation\/flowkit\/flowviewprotocol\/present(_:)","title":"func present(some Presentable)","type":"method"},{"path":"\/documentation\/flowkit\/flowviewprotocol\/test(event:)","title":"func test(event: Event) async throws","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/flowkit\/flowviewprotocol\/node","title":"static var node: Node<Self>","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"children":[{"children":[{"path":"\/documentation\/flowkit\/flowviewprotocol\/factory(model:)-7i47c","title":"static func factory(model: some InOutProtocol) throws -> Self","type":"method"}],"title":"FlowViewProtocol Implementations","type":"groupMarker"}],"path":"\/documentation\/flowkit\/flowviewprotocol\/factory(model:)-1hedg","title":"static func factory(model: some InOutProtocol) throws -> Self","type":"method"},{"path":"\/documentation\/flowkit\/flowviewprotocol\/node(_:)","title":"static func node((Self.Out.Type) -> [any CoordinatorJoinProtocol]) -> Node<Self>","type":"method"}],"path":"\/documentation\/flowkit\/flowviewprotocol","title":"FlowViewProtocol","type":"protocol"},{"children":[{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/flowkit\/identifiablecase\/==(_:_:)","title":"static func == (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/flowkit\/identifiablecase\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/flowkit\/identifiablecase\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/flowkit\/identifiablecase\/hashable-implementations","title":"Hashable Implementations","type":"symbol"}],"path":"\/documentation\/flowkit\/identifiablecase","title":"IdentifiableCase","type":"protocol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/flowkit\/inoutprotocol\/init()","title":"init()","type":"init"}],"path":"\/documentation\/flowkit\/inoutprotocol","title":"InOutProtocol","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"children":[{"children":[{"path":"\/documentation\/flowkit\/localizable\/injectedlocalized-1jgir","title":"var injectedLocalized: String.LocalizationValue","type":"property"}],"title":"Localizable Implementations","type":"groupMarker"}],"path":"\/documentation\/flowkit\/localizable\/injectedlocalized-437g0","title":"var injectedLocalized: String.LocalizationValue","type":"property"},{"path":"\/documentation\/flowkit\/localizable\/localized","title":"var localized: String","type":"property"}],"path":"\/documentation\/flowkit\/localizable","title":"Localizable","type":"protocol"},{"children":[{"title":"Associated Types","type":"groupMarker"},{"path":"\/documentation\/flowkit\/localizablejoinprotocol\/from-swift.associatedtype","title":"From","type":"associatedtype"},{"path":"\/documentation\/flowkit\/localizablejoinprotocol\/to-swift.associatedtype","title":"To","type":"associatedtype"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/flowkit\/localizablejoinprotocol\/from-swift.property","title":"var from: From","type":"property"},{"path":"\/documentation\/flowkit\/localizablejoinprotocol\/to-swift.property","title":"var to: To","type":"property"}],"path":"\/documentation\/flowkit\/localizablejoinprotocol","title":"LocalizableJoinProtocol","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/flowkit\/navigable\/routestring","title":"var routeString: String","type":"property"}],"path":"\/documentation\/flowkit\/navigable","title":"Navigable","type":"protocol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/flowkit\/navigationprotocol\/init()","title":"init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/flowkit\/navigationprotocol\/action","title":"var action: PassthroughSubject<NavigationAction, Never>","type":"property"},{"path":"\/documentation\/flowkit\/navigationprotocol\/items","title":"var items: NavigationItems","type":"property"},{"path":"\/documentation\/flowkit\/navigationprotocol\/routes","title":"var routes: [String]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/flowkit\/navigationprotocol\/dismiss()","title":"func dismiss()","type":"method"},{"children":[{"children":[{"path":"\/documentation\/flowkit\/navigationprotocol\/flow(route:)-8mhzn","title":"func flow(route: some Routable) throws -> (any FlowProtocol)","type":"method"}],"title":"NavigationProtocol Implementations","type":"groupMarker"}],"path":"\/documentation\/flowkit\/navigationprotocol\/flow(route:)-3sj1k","title":"func flow(route: some Routable) throws -> (any FlowProtocol)","type":"method"},{"path":"\/documentation\/flowkit\/navigationprotocol\/navigate(route:)","title":"func navigate(route: some Routable) throws","type":"method"},{"path":"\/documentation\/flowkit\/navigationprotocol\/navigate(routestring:)","title":"func navigate(routeString: String)","type":"method"},{"children":[{"children":[{"path":"\/documentation\/flowkit\/navigationprotocol\/navigate(view:)-p0dh","title":"func navigate(view: some Navigable)","type":"method"}],"title":"NavigationProtocol Implementations","type":"groupMarker"}],"path":"\/documentation\/flowkit\/navigationprotocol\/navigate(view:)-3k3ws","title":"func navigate(view: some Navigable)","type":"method"},{"path":"\/documentation\/flowkit\/navigationprotocol\/pop()","title":"func pop()","type":"method"},{"path":"\/documentation\/flowkit\/navigationprotocol\/poptoflow()","title":"func popToFlow()","type":"method"},{"path":"\/documentation\/flowkit\/navigationprotocol\/poptoroot()","title":"func popToRoot()","type":"method"},{"path":"\/documentation\/flowkit\/navigationprotocol\/present(route:)","title":"func present(route: some Routable) throws","type":"method"},{"path":"\/documentation\/flowkit\/navigationprotocol\/present(routestring:)","title":"func present(routeString: String)","type":"method"},{"children":[{"children":[{"path":"\/documentation\/flowkit\/navigationprotocol\/present(view:)-8zwon","title":"func present(view: some Presentable)","type":"method"}],"title":"NavigationProtocol Implementations","type":"groupMarker"}],"path":"\/documentation\/flowkit\/navigationprotocol\/present(view:)-2q1uj","title":"func present(view: some Presentable)","type":"method"},{"children":[{"children":[{"path":"\/documentation\/flowkit\/navigationprotocol\/register(route:with:)-6ut3u","title":"func register(route: some Routable, with: () -> (any Navigable))","type":"method"}],"title":"NavigationProtocol Implementations","type":"groupMarker"}],"path":"\/documentation\/flowkit\/navigationprotocol\/register(route:with:)-4d993","title":"func register(route: some Routable, with: () -> (any Navigable))","type":"method"}],"path":"\/documentation\/flowkit\/navigationprotocol","title":"NavigationProtocol","type":"protocol"},{"path":"\/documentation\/flowkit\/nodable","title":"Nodable","type":"protocol"},{"children":[{"title":"Associated Types","type":"groupMarker"},{"path":"\/documentation\/flowkit\/outjoinprotocol\/key","title":"Key","type":"associatedtype"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/flowkit\/outjoinprotocol\/from","title":"var from: Key","type":"property"},{"path":"\/documentation\/flowkit\/outjoinprotocol\/to","title":"var to: Out","type":"property"}],"path":"\/documentation\/flowkit\/outjoinprotocol","title":"OutJoinProtocol","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"children":[{"children":[{"path":"\/documentation\/flowkit\/presentable\/dismiss-1c702","title":"var dismiss: () -> ()","type":"property"}],"title":"Presentable Implementations","type":"groupMarker"}],"path":"\/documentation\/flowkit\/presentable\/dismiss-37eho","title":"var dismiss: () -> ()","type":"property"}],"path":"\/documentation\/flowkit\/presentable","title":"Presentable","type":"protocol"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/flowkit\/resolverregistering\/registerallservices()","title":"static func registerAllServices()","type":"method"}],"path":"\/documentation\/flowkit\/resolverregistering","title":"ResolverRegistering","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/flowkit\/resolverscopetype\/reset()","title":"func reset()","type":"method"},{"path":"\/documentation\/flowkit\/resolverscopetype\/resolve(registration:resolver:args:)","title":"func resolve<Service>(registration: ResolverRegistration<Service>, resolver: Resolver, args: Any?) -> Service?","type":"method"}],"path":"\/documentation\/flowkit\/resolverscopetype","title":"ResolverScopeType","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"children":[{"children":[{"path":"\/documentation\/flowkit\/resolving\/resolver-7yeg","title":"var resolver: Resolver","type":"property"}],"title":"Resolving Implementations","type":"groupMarker"}],"path":"\/documentation\/flowkit\/resolving\/resolver-17cuh","title":"var resolver: Resolver","type":"property"}],"path":"\/documentation\/flowkit\/resolving","title":"Resolving","type":"protocol"},{"path":"\/documentation\/flowkit\/routable","title":"Routable","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/flowkit\/storyboardresolving\/resolveviewcontroller()","title":"func resolveViewController()","type":"method"}],"path":"\/documentation\/flowkit\/storyboardresolving","title":"StoryboardResolving","type":"protocol"},{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/flowkit\/asyncthrowingsubject\/init(_:)","title":"init(Element.Type)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/flowkit\/asyncthrowingsubject\/finish(throwing:)","title":"func finish(throwing: (any Error)?)","type":"method"},{"path":"\/documentation\/flowkit\/asyncthrowingsubject\/makeasynciterator()","title":"func makeAsyncIterator() -> AsyncThrowingStream<Element, Failure>.Iterator","type":"method"},{"path":"\/documentation\/flowkit\/asyncthrowingsubject\/send(_:)","title":"func send(Element)","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/flowkit\/asyncthrowingsubject\/asynciterator","title":"AsyncThrowingSubject.AsyncIterator","type":"typealias"},{"path":"\/documentation\/flowkit\/asyncthrowingsubject\/failure","title":"AsyncThrowingSubject.Failure","type":"typealias"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/flowkit\/asyncthrowingsubject\/characters","title":"var characters: AsyncCharacterSequence<Self>","type":"property"},{"path":"\/documentation\/flowkit\/asyncthrowingsubject\/lines","title":"var lines: AsyncLineSequence<Self>","type":"property"},{"path":"\/documentation\/flowkit\/asyncthrowingsubject\/unicodescalars","title":"var unicodeScalars: AsyncUnicodeScalarSequence<Self>","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/flowkit\/asyncthrowingsubject\/allsatisfy(_:)","title":"func allSatisfy((Self.Element) async throws -> Bool) async rethrows -> Bool","type":"method"},{"path":"\/documentation\/flowkit\/asyncthrowingsubject\/compactmap(_:)-1ndyz","title":"func compactMap<ElementOfResult>((Self.Element) async -> ElementOfResult?) -> AsyncCompactMapSequence<Self, ElementOfResult>","type":"method"},{"path":"\/documentation\/flowkit\/asyncthrowingsubject\/compactmap(_:)-90bfg","title":"func compactMap<ElementOfResult>((Self.Element) async throws -> ElementOfResult?) -> AsyncThrowingCompactMapSequence<Self, ElementOfResult>","type":"method"},{"path":"\/documentation\/flowkit\/asyncthrowingsubject\/contains(_:)","title":"func contains(Self.Element) async rethrows -> Bool","type":"method"},{"path":"\/documentation\/flowkit\/asyncthrowingsubject\/contains(where:)","title":"func contains(where: (Self.Element) async throws -> Bool) async rethrows -> Bool","type":"method"},{"path":"\/documentation\/flowkit\/asyncthrowingsubject\/drop(while:)","title":"func drop(while: (Self.Element) async -> Bool) -> AsyncDropWhileSequence<Self>","type":"method"},{"path":"\/documentation\/flowkit\/asyncthrowingsubject\/dropfirst(_:)","title":"func dropFirst(Int) -> AsyncDropFirstSequence<Self>","type":"method"},{"path":"\/documentation\/flowkit\/asyncthrowingsubject\/filter(_:)","title":"func filter((Self.Element) async -> Bool) -> AsyncFilterSequence<Self>","type":"method"},{"path":"\/documentation\/flowkit\/asyncthrowingsubject\/first(where:)","title":"func first(where: (Self.Element) async throws -> Bool) async rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/flowkit\/asyncthrowingsubject\/flatmap(_:)-2kgll","title":"func flatMap<SegmentOfResult>((Self.Element) async -> SegmentOfResult) -> AsyncFlatMapSequence<Self, SegmentOfResult>","type":"method"},{"path":"\/documentation\/flowkit\/asyncthrowingsubject\/flatmap(_:)-6kw1q","title":"func flatMap<SegmentOfResult>((Self.Element) async throws -> SegmentOfResult) -> AsyncThrowingFlatMapSequence<Self, SegmentOfResult>","type":"method"},{"path":"\/documentation\/flowkit\/asyncthrowingsubject\/map(_:)-2en75","title":"func map<Transformed>((Self.Element) async throws -> Transformed) -> AsyncThrowingMapSequence<Self, Transformed>","type":"method"},{"path":"\/documentation\/flowkit\/asyncthrowingsubject\/map(_:)-5plm5","title":"func map<Transformed>((Self.Element) async -> Transformed) -> AsyncMapSequence<Self, Transformed>","type":"method"},{"path":"\/documentation\/flowkit\/asyncthrowingsubject\/max()","title":"func max() async rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/flowkit\/asyncthrowingsubject\/max(by:)","title":"func max(by: (Self.Element, Self.Element) async throws -> Bool) async rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/flowkit\/asyncthrowingsubject\/min()","title":"func min() async rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/flowkit\/asyncthrowingsubject\/min(by:)","title":"func min(by: (Self.Element, Self.Element) async throws -> Bool) async rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/flowkit\/asyncthrowingsubject\/prefix(_:)","title":"func prefix(Int) -> AsyncPrefixSequence<Self>","type":"method"},{"path":"\/documentation\/flowkit\/asyncthrowingsubject\/prefix(while:)","title":"func prefix(while: (Self.Element) async -> Bool) rethrows -> AsyncPrefixWhileSequence<Self>","type":"method"},{"path":"\/documentation\/flowkit\/asyncthrowingsubject\/reduce(_:_:)","title":"func reduce<Result>(Result, (Result, Self.Element) async throws -> Result) async rethrows -> Result","type":"method"},{"path":"\/documentation\/flowkit\/asyncthrowingsubject\/reduce(into:_:)","title":"func reduce<Result>(into: Result, (inout Result, Self.Element) async throws -> Void) async rethrows -> Result","type":"method"}],"path":"\/documentation\/flowkit\/asyncthrowingsubject\/asyncsequence-implementations","title":"AsyncSequence Implementations","type":"symbol"}],"path":"\/documentation\/flowkit\/asyncthrowingsubject","title":"AsyncThrowingSubject","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/flowkit\/eventjoin\/init(_:_:)","title":"init(T, Event)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/flowkit\/eventjoin\/from","title":"let from: T","type":"property"},{"path":"\/documentation\/flowkit\/eventjoin\/to","title":"let to: Event","type":"property"}],"path":"\/documentation\/flowkit\/eventjoin","title":"EventJoin","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/flowkit\/flowbehavior\/init()","title":"init()","type":"init"},{"path":"\/documentation\/flowkit\/flowbehavior\/init(_:)","title":"init(() -> [Behaviors])","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/flowkit\/flowbehavior\/events","title":"var events: [any EventJoinProtocol]","type":"property"},{"path":"\/documentation\/flowkit\/flowbehavior\/isempty","title":"var isEmpty: Bool","type":"property"},{"path":"\/documentation\/flowkit\/flowbehavior\/localizables","title":"var localizables: [any LocalizableJoinProtocol]","type":"property"},{"path":"\/documentation\/flowkit\/flowbehavior\/outs","title":"var outs: [any OutJoinProtocol]","type":"property"}],"path":"\/documentation\/flowkit\/flowbehavior","title":"FlowBehavior","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/flowkit\/injected\/init()","title":"init()","type":"init"},{"path":"\/documentation\/flowkit\/injected\/init(name:container:)","title":"init(name: Resolver.Name?, container: Resolver?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/flowkit\/injected\/projectedvalue","title":"var projectedValue: Injected<Service>","type":"property"},{"path":"\/documentation\/flowkit\/injected\/wrappedvalue","title":"var wrappedValue: Service","type":"property"}],"path":"\/documentation\/flowkit\/injected","title":"Injected","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/flowkit\/injectedobject\/init()","title":"init()","type":"init"},{"path":"\/documentation\/flowkit\/injectedobject\/init(name:container:)","title":"init(name: Resolver.Name?, container: Resolver?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/flowkit\/injectedobject\/projectedvalue","title":"var projectedValue: ObservedObject<Service>.Wrapper","type":"property"},{"path":"\/documentation\/flowkit\/injectedobject\/wrappedvalue","title":"var wrappedValue: Service","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/flowkit\/injectedobject\/update()","title":"func update()","type":"method"}],"path":"\/documentation\/flowkit\/injectedobject\/dynamicproperty-implementations","title":"DynamicProperty Implementations","type":"symbol"}],"path":"\/documentation\/flowkit\/injectedobject","title":"InjectedObject","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/flowkit\/join\/init(_:_:)","title":"init(Out, any Nodable)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/flowkit\/join\/event","title":"let event: Out","type":"property"},{"path":"\/documentation\/flowkit\/join\/node","title":"let node: any Nodable","type":"property"}],"path":"\/documentation\/flowkit\/join","title":"Join","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/flowkit\/lazyinjected\/init()","title":"init()","type":"init"},{"path":"\/documentation\/flowkit\/lazyinjected\/init(name:container:)","title":"init(name: Resolver.Name?, container: Resolver?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/flowkit\/lazyinjected\/args","title":"var args: Any?","type":"property"},{"path":"\/documentation\/flowkit\/lazyinjected\/container","title":"var container: Resolver?","type":"property"},{"path":"\/documentation\/flowkit\/lazyinjected\/isempty","title":"var isEmpty: Bool","type":"property"},{"path":"\/documentation\/flowkit\/lazyinjected\/name","title":"var name: Resolver.Name?","type":"property"},{"path":"\/documentation\/flowkit\/lazyinjected\/projectedvalue","title":"var projectedValue: LazyInjected<Service>","type":"property"},{"path":"\/documentation\/flowkit\/lazyinjected\/wrappedvalue","title":"var wrappedValue: Service","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/flowkit\/lazyinjected\/release()","title":"func release()","type":"method"}],"path":"\/documentation\/flowkit\/lazyinjected","title":"LazyInjected","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/flowkit\/localizablejoin\/init(_:_:)","title":"init(From, To)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/flowkit\/localizablejoin\/from","title":"let from: From","type":"property"},{"path":"\/documentation\/flowkit\/localizablejoin\/to","title":"let to: To","type":"property"}],"path":"\/documentation\/flowkit\/localizablejoin","title":"LocalizableJoin","type":"struct"},{"path":"\/documentation\/flowkit\/navigationitems","title":"NavigationItems","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/flowkit\/node\/init(_:)","title":"init(View.Type)","type":"init"},{"path":"\/documentation\/flowkit\/node\/init(_:_:)","title":"init(View.Type, [any CoordinatorJoinProtocol])","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/flowkit\/node\/eventscount","title":"var eventsCount: Int","type":"property"},{"path":"\/documentation\/flowkit\/node\/in","title":"var `in`: View.In.Type","type":"property"},{"path":"\/documentation\/flowkit\/node\/joins","title":"var joins: [any CoordinatorJoinProtocol]","type":"property"},{"path":"\/documentation\/flowkit\/node\/view","title":"let view: View.Type","type":"property"}],"path":"\/documentation\/flowkit\/node","title":"Node","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/flowkit\/optionalinjected\/init()","title":"init()","type":"init"},{"path":"\/documentation\/flowkit\/optionalinjected\/init(name:container:)","title":"init(name: Resolver.Name?, container: Resolver?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/flowkit\/optionalinjected\/projectedvalue","title":"var projectedValue: OptionalInjected<Service>","type":"property"},{"path":"\/documentation\/flowkit\/optionalinjected\/wrappedvalue","title":"var wrappedValue: Service?","type":"property"}],"path":"\/documentation\/flowkit\/optionalinjected","title":"OptionalInjected","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/flowkit\/outjoin\/init(_:_:)","title":"init(T, Out)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/flowkit\/outjoin\/from","title":"let from: T","type":"property"},{"path":"\/documentation\/flowkit\/outjoin\/to","title":"let to: Out","type":"property"}],"path":"\/documentation\/flowkit\/outjoin","title":"OutJoin","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/flowkit\/resolveroptions\/registration","title":"var registration: ResolverRegistration<Service>","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/flowkit\/resolveroptions\/implements(_:name:)","title":"func implements<Protocol>(Protocol.Type, name: Resolver.Name?) -> ResolverOptions<Service>","type":"method"},{"path":"\/documentation\/flowkit\/resolveroptions\/resolveproperties(_:)-5qlmg","title":"func resolveProperties(ResolverFactoryMutator<Service>) -> ResolverOptions<Service>","type":"method"},{"path":"\/documentation\/flowkit\/resolveroptions\/resolveproperties(_:)-6yge3","title":"func resolveProperties(ResolverFactoryMutatorArgumentsN<Service>) -> ResolverOptions<Service>","type":"method"},{"path":"\/documentation\/flowkit\/resolveroptions\/scope(_:)","title":"func scope(ResolverScope) -> ResolverOptions<Service>","type":"method"}],"path":"\/documentation\/flowkit\/resolveroptions","title":"ResolverOptions","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/flowkit\/swiftuinavigationmodifier\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/flowkit\/swiftuinavigationmodifier\/body(content:)","title":"func body(content: Content) -> some View","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/flowkit\/swiftuinavigationmodifier\/animation(_:)","title":"func animation(Animation?) -> some ViewModifier","type":"method"},{"path":"\/documentation\/flowkit\/swiftuinavigationmodifier\/concat(_:)","title":"func concat<T>(T) -> ModifiedContent<Self, T>","type":"method"},{"path":"\/documentation\/flowkit\/swiftuinavigationmodifier\/transaction(_:)","title":"func transaction((inout Transaction) -> Void) -> some ViewModifier","type":"method"}],"path":"\/documentation\/flowkit\/swiftuinavigationmodifier\/viewmodifier-implementations","title":"ViewModifier Implementations","type":"symbol"}],"path":"\/documentation\/flowkit\/swiftuinavigationmodifier","title":"SwiftUINavigationModifier","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/flowkit\/swiftuinavigationv1modifier\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/flowkit\/swiftuinavigationv1modifier\/body(content:)","title":"func body(content: Content) -> some View","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/flowkit\/swiftuinavigationv1modifier\/animation(_:)","title":"func animation(Animation?) -> some ViewModifier","type":"method"},{"path":"\/documentation\/flowkit\/swiftuinavigationv1modifier\/concat(_:)","title":"func concat<T>(T) -> ModifiedContent<Self, T>","type":"method"},{"path":"\/documentation\/flowkit\/swiftuinavigationv1modifier\/transaction(_:)","title":"func transaction((inout Transaction) -> Void) -> some ViewModifier","type":"method"}],"path":"\/documentation\/flowkit\/swiftuinavigationv1modifier\/viewmodifier-implementations","title":"ViewModifier Implementations","type":"symbol"}],"path":"\/documentation\/flowkit\/swiftuinavigationv1modifier","title":"SwiftUINavigationV1Modifier","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/flowkit\/swiftuinavigationv2modifier\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/flowkit\/swiftuinavigationv2modifier\/body(content:)","title":"func body(content: Content) -> some View","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/flowkit\/swiftuinavigationv2modifier\/animation(_:)","title":"func animation(Animation?) -> some ViewModifier","type":"method"},{"path":"\/documentation\/flowkit\/swiftuinavigationv2modifier\/concat(_:)","title":"func concat<T>(T) -> ModifiedContent<Self, T>","type":"method"},{"path":"\/documentation\/flowkit\/swiftuinavigationv2modifier\/transaction(_:)","title":"func transaction((inout Transaction) -> Void) -> some ViewModifier","type":"method"}],"path":"\/documentation\/flowkit\/swiftuinavigationv2modifier\/viewmodifier-implementations","title":"ViewModifier Implementations","type":"symbol"}],"path":"\/documentation\/flowkit\/swiftuinavigationv2modifier","title":"SwiftUINavigationV2Modifier","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/flowkit\/uikitnavigationmodifier\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/flowkit\/uikitnavigationmodifier\/body(content:)","title":"func body(content: Content) -> some View","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/flowkit\/uikitnavigationmodifier\/animation(_:)","title":"func animation(Animation?) -> some ViewModifier","type":"method"},{"path":"\/documentation\/flowkit\/uikitnavigationmodifier\/concat(_:)","title":"func concat<T>(T) -> ModifiedContent<Self, T>","type":"method"},{"path":"\/documentation\/flowkit\/uikitnavigationmodifier\/transaction(_:)","title":"func transaction((inout Transaction) -> Void) -> some ViewModifier","type":"method"}],"path":"\/documentation\/flowkit\/uikitnavigationmodifier\/viewmodifier-implementations","title":"ViewModifier Implementations","type":"symbol"}],"path":"\/documentation\/flowkit\/uikitnavigationmodifier","title":"UIKitNavigationModifier","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/flowkit\/weaklazyinjected\/init()","title":"init()","type":"init"},{"path":"\/documentation\/flowkit\/weaklazyinjected\/init(name:container:)","title":"init(name: Resolver.Name?, container: Resolver?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/flowkit\/weaklazyinjected\/args","title":"var args: Any?","type":"property"},{"path":"\/documentation\/flowkit\/weaklazyinjected\/container","title":"var container: Resolver?","type":"property"},{"path":"\/documentation\/flowkit\/weaklazyinjected\/isempty","title":"var isEmpty: Bool","type":"property"},{"path":"\/documentation\/flowkit\/weaklazyinjected\/name","title":"var name: Resolver.Name?","type":"property"},{"path":"\/documentation\/flowkit\/weaklazyinjected\/projectedvalue","title":"var projectedValue: WeakLazyInjected<Service>","type":"property"},{"path":"\/documentation\/flowkit\/weaklazyinjected\/wrappedvalue","title":"var wrappedValue: Service?","type":"property"}],"path":"\/documentation\/flowkit\/weaklazyinjected","title":"WeakLazyInjected","type":"struct"},{"title":"Functions","type":"groupMarker"},{"path":"\/documentation\/flowkit\/events(_:)","title":"func Events(() -> [any EventJoinProtocol]) -> Behaviors","type":"func"},{"path":"\/documentation\/flowkit\/localizables(_:)","title":"func Localizables(() -> [any LocalizableJoinProtocol]) -> Behaviors","type":"func"},{"path":"\/documentation\/flowkit\/outs(_:)","title":"func Outs(() -> [any OutJoinProtocol]) -> Behaviors","type":"func"},{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/flowkit\/~(_:_:)-1p23t","title":"func ~ <From, To>(From, To) -> any LocalizableJoinProtocol","type":"op"},{"path":"\/documentation\/flowkit\/~(_:_:)-4twir","title":"func ~ <Out, Node>(Out, Node) -> any CoordinatorJoinProtocol","type":"op"},{"path":"\/documentation\/flowkit\/~(_:_:)-6seye","title":"func ~ <T>(T, Out) -> any OutJoinProtocol","type":"op"},{"path":"\/documentation\/flowkit\/~(_:_:)-9fk6l","title":"func ~ <T>(T, Event) -> any EventJoinProtocol","type":"op"},{"title":"Macros","type":"groupMarker"},{"path":"\/documentation\/flowkit\/enumallcases()","title":"macro EnumAllCases()","type":"macro"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/flowkit\/event","title":"Event","type":"typealias"},{"path":"\/documentation\/flowkit\/out","title":"Out","type":"typealias"},{"path":"\/documentation\/flowkit\/resolverfactory","title":"ResolverFactory","type":"typealias"},{"path":"\/documentation\/flowkit\/resolverfactoryanyarguments","title":"ResolverFactoryAnyArguments","type":"typealias"},{"path":"\/documentation\/flowkit\/resolverfactoryargumentsn","title":"ResolverFactoryArgumentsN","type":"typealias"},{"path":"\/documentation\/flowkit\/resolverfactorymutator","title":"ResolverFactoryMutator","type":"typealias"},{"path":"\/documentation\/flowkit\/resolverfactorymutatorargumentsn","title":"ResolverFactoryMutatorArgumentsN","type":"typealias"},{"path":"\/documentation\/flowkit\/resolverfactoryresolver","title":"ResolverFactoryResolver","type":"typealias"},{"path":"\/documentation\/flowkit\/resolverscopeunique","title":"ResolverScopeUnique","type":"typealias"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/flowkit\/behaviors\/event(_:)","title":"case event([any EventJoinProtocol])","type":"case"},{"path":"\/documentation\/flowkit\/behaviors\/localizable(_:)","title":"case localizable([any LocalizableJoinProtocol])","type":"case"},{"path":"\/documentation\/flowkit\/behaviors\/out(_:)","title":"case out([any OutJoinProtocol])","type":"case"}],"path":"\/documentation\/flowkit\/behaviors","title":"Behaviors","type":"enum"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/flowkit\/behaviorsbuilder\/buildarray(_:)","title":"static func buildArray([[Behaviors]]) -> [Behaviors]","type":"method"},{"path":"\/documentation\/flowkit\/behaviorsbuilder\/buildblock()","title":"static func buildBlock() -> [Behaviors]","type":"method"},{"path":"\/documentation\/flowkit\/behaviorsbuilder\/buildblock(_:)-3exr0","title":"static func buildBlock((Behaviors)...) -> [Behaviors]","type":"method"},{"path":"\/documentation\/flowkit\/behaviorsbuilder\/buildblock(_:)-kwei","title":"static func buildBlock([Behaviors]...) -> [Behaviors]","type":"method"},{"path":"\/documentation\/flowkit\/behaviorsbuilder\/buildeither(first:)","title":"static func buildEither(first: [Behaviors]) -> [Behaviors]","type":"method"},{"path":"\/documentation\/flowkit\/behaviorsbuilder\/buildeither(second:)","title":"static func buildEither(second: [Behaviors]) -> [Behaviors]","type":"method"},{"path":"\/documentation\/flowkit\/behaviorsbuilder\/buildexpression(_:)","title":"static func buildExpression(Behaviors) -> [Behaviors]","type":"method"},{"path":"\/documentation\/flowkit\/behaviorsbuilder\/buildoptional(_:)","title":"static func buildOptional([Behaviors]?) -> [Behaviors]","type":"method"},{"path":"\/documentation\/flowkit\/behaviorsbuilder\/buildpartialblock(accumulated:next:)","title":"static func buildPartialBlock(accumulated: [Behaviors], next: [Behaviors]) -> [Behaviors]","type":"method"},{"path":"\/documentation\/flowkit\/behaviorsbuilder\/buildpartialblock(first:)","title":"static func buildPartialBlock(first: [Behaviors]) -> [Behaviors]","type":"method"}],"path":"\/documentation\/flowkit\/behaviorsbuilder","title":"BehaviorsBuilder","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/flowkit\/coordinatorevent\/back","title":"case back","type":"case"},{"path":"\/documentation\/flowkit\/coordinatorevent\/commit(_:toroot:)","title":"case commit(any InOutProtocol, toRoot: Bool)","type":"case"},{"path":"\/documentation\/flowkit\/coordinatorevent\/event(_:)","title":"case event(any FlowEventProtocol)","type":"case"},{"path":"\/documentation\/flowkit\/coordinatorevent\/next(_:)","title":"case next(any FlowOutProtocol)","type":"case"},{"path":"\/documentation\/flowkit\/coordinatorevent\/present(_:)","title":"case present(any Presentable)","type":"case"}],"path":"\/documentation\/flowkit\/coordinatorevent","title":"CoordinatorEvent","type":"enum"},{"children":[{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/flowkit\/eventempty\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/flowkit\/eventempty\/==(_:_:)","title":"static func == (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/flowkit\/eventempty\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/flowkit\/eventempty\/associated","title":"var associated: (label: String, value: (any InOutProtocol)?)","type":"property"},{"path":"\/documentation\/flowkit\/eventempty\/id","title":"var id: String","type":"property"}],"path":"\/documentation\/flowkit\/eventempty\/floweventprotocol-implementations","title":"FlowEventProtocol Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/flowkit\/eventempty\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/flowkit\/eventempty\/hashable-implementations","title":"Hashable Implementations","type":"symbol"}],"path":"\/documentation\/flowkit\/eventempty","title":"EventEmpty","type":"enum"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/flowkit\/eventsbuilder\/buildarray(_:)","title":"static func buildArray([[any EventJoinProtocol]]) -> [any EventJoinProtocol]","type":"method"},{"path":"\/documentation\/flowkit\/eventsbuilder\/buildblock()","title":"static func buildBlock() -> [any EventJoinProtocol]","type":"method"},{"path":"\/documentation\/flowkit\/eventsbuilder\/buildblock(_:)-3t8s5","title":"static func buildBlock((any EventJoinProtocol)...) -> [any EventJoinProtocol]","type":"method"},{"path":"\/documentation\/flowkit\/eventsbuilder\/buildblock(_:)-4o5vv","title":"static func buildBlock([any EventJoinProtocol]...) -> [any EventJoinProtocol]","type":"method"},{"path":"\/documentation\/flowkit\/eventsbuilder\/buildeither(first:)","title":"static func buildEither(first: [any EventJoinProtocol]) -> [any EventJoinProtocol]","type":"method"},{"path":"\/documentation\/flowkit\/eventsbuilder\/buildeither(second:)","title":"static func buildEither(second: [any EventJoinProtocol]) -> [any EventJoinProtocol]","type":"method"},{"path":"\/documentation\/flowkit\/eventsbuilder\/buildexpression(_:)","title":"static func buildExpression(any EventJoinProtocol) -> [any EventJoinProtocol]","type":"method"},{"path":"\/documentation\/flowkit\/eventsbuilder\/buildoptional(_:)","title":"static func buildOptional([any EventJoinProtocol]?) -> [any EventJoinProtocol]","type":"method"},{"path":"\/documentation\/flowkit\/eventsbuilder\/buildpartialblock(accumulated:next:)","title":"static func buildPartialBlock(accumulated: [any EventJoinProtocol], next: [any EventJoinProtocol]) -> [any EventJoinProtocol]","type":"method"},{"path":"\/documentation\/flowkit\/eventsbuilder\/buildpartialblock(first:)","title":"static func buildPartialBlock(first: [any EventJoinProtocol]) -> [any EventJoinProtocol]","type":"method"}],"path":"\/documentation\/flowkit\/eventsbuilder","title":"EventsBuilder","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/flowkit\/flowerror\/eventnotfound","title":"case eventNotFound","type":"case"},{"path":"\/documentation\/flowkit\/flowerror\/flownotfound","title":"case flowNotFound","type":"case"},{"path":"\/documentation\/flowkit\/flowerror\/generic","title":"case generic","type":"case"},{"path":"\/documentation\/flowkit\/flowerror\/invalidmodel(_:)","title":"case invalidModel(String)","type":"case"},{"path":"\/documentation\/flowkit\/flowerror\/partialmapping(_:)","title":"case partialMapping(String)","type":"case"},{"path":"\/documentation\/flowkit\/flowerror\/routenotfound","title":"case routeNotFound","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/flowkit\/flowerror\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/flowkit\/flowerror\/error-implementations","title":"Error Implementations","type":"symbol"}],"path":"\/documentation\/flowkit\/flowerror","title":"FlowError","type":"enum"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/flowkit\/joinsbuilder\/buildarray(_:)","title":"static func buildArray([[any CoordinatorJoinProtocol]]) -> [any CoordinatorJoinProtocol]","type":"method"},{"path":"\/documentation\/flowkit\/joinsbuilder\/buildblock()","title":"static func buildBlock() -> [any CoordinatorJoinProtocol]","type":"method"},{"path":"\/documentation\/flowkit\/joinsbuilder\/buildblock(_:)-5lloo","title":"static func buildBlock([any CoordinatorJoinProtocol]...) -> [any CoordinatorJoinProtocol]","type":"method"},{"path":"\/documentation\/flowkit\/joinsbuilder\/buildblock(_:)-995ab","title":"static func buildBlock((any CoordinatorJoinProtocol)...) -> [any CoordinatorJoinProtocol]","type":"method"},{"path":"\/documentation\/flowkit\/joinsbuilder\/buildeither(first:)","title":"static func buildEither(first: [any CoordinatorJoinProtocol]) -> [any CoordinatorJoinProtocol]","type":"method"},{"path":"\/documentation\/flowkit\/joinsbuilder\/buildeither(second:)","title":"static func buildEither(second: [any CoordinatorJoinProtocol]) -> [any CoordinatorJoinProtocol]","type":"method"},{"path":"\/documentation\/flowkit\/joinsbuilder\/buildexpression(_:)","title":"static func buildExpression(any CoordinatorJoinProtocol) -> [any CoordinatorJoinProtocol]","type":"method"},{"path":"\/documentation\/flowkit\/joinsbuilder\/buildoptional(_:)","title":"static func buildOptional([any CoordinatorJoinProtocol]?) -> [any CoordinatorJoinProtocol]","type":"method"},{"path":"\/documentation\/flowkit\/joinsbuilder\/buildpartialblock(accumulated:next:)","title":"static func buildPartialBlock(accumulated: [any CoordinatorJoinProtocol], next: [any CoordinatorJoinProtocol]) -> [any CoordinatorJoinProtocol]","type":"method"},{"path":"\/documentation\/flowkit\/joinsbuilder\/buildpartialblock(first:)","title":"static func buildPartialBlock(first: [any CoordinatorJoinProtocol]) -> [any CoordinatorJoinProtocol]","type":"method"}],"path":"\/documentation\/flowkit\/joinsbuilder","title":"JoinsBuilder","type":"enum"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/flowkit\/localizablesbuilder\/buildarray(_:)","title":"static func buildArray([[any LocalizableJoinProtocol]]) -> [any LocalizableJoinProtocol]","type":"method"},{"path":"\/documentation\/flowkit\/localizablesbuilder\/buildblock()","title":"static func buildBlock() -> [any LocalizableJoinProtocol]","type":"method"},{"path":"\/documentation\/flowkit\/localizablesbuilder\/buildblock(_:)-5una1","title":"static func buildBlock((any LocalizableJoinProtocol)...) -> [any LocalizableJoinProtocol]","type":"method"},{"path":"\/documentation\/flowkit\/localizablesbuilder\/buildblock(_:)-77hf9","title":"static func buildBlock([any LocalizableJoinProtocol]...) -> [any LocalizableJoinProtocol]","type":"method"},{"path":"\/documentation\/flowkit\/localizablesbuilder\/buildeither(first:)","title":"static func buildEither(first: [any LocalizableJoinProtocol]) -> [any LocalizableJoinProtocol]","type":"method"},{"path":"\/documentation\/flowkit\/localizablesbuilder\/buildeither(second:)","title":"static func buildEither(second: [any LocalizableJoinProtocol]) -> [any LocalizableJoinProtocol]","type":"method"},{"path":"\/documentation\/flowkit\/localizablesbuilder\/buildexpression(_:)","title":"static func buildExpression(any LocalizableJoinProtocol) -> [any LocalizableJoinProtocol]","type":"method"},{"path":"\/documentation\/flowkit\/localizablesbuilder\/buildoptional(_:)","title":"static func buildOptional([any LocalizableJoinProtocol]?) -> [any LocalizableJoinProtocol]","type":"method"},{"path":"\/documentation\/flowkit\/localizablesbuilder\/buildpartialblock(accumulated:next:)","title":"static func buildPartialBlock(accumulated: [any LocalizableJoinProtocol], next: [any LocalizableJoinProtocol]) -> [any LocalizableJoinProtocol]","type":"method"},{"path":"\/documentation\/flowkit\/localizablesbuilder\/buildpartialblock(first:)","title":"static func buildPartialBlock(first: [any LocalizableJoinProtocol]) -> [any LocalizableJoinProtocol]","type":"method"}],"path":"\/documentation\/flowkit\/localizablesbuilder","title":"LocalizablesBuilder","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/flowkit\/navigationaction\/dismiss","title":"case dismiss","type":"case"},{"path":"\/documentation\/flowkit\/navigationaction\/navigate(_:)","title":"case navigate(String)","type":"case"},{"path":"\/documentation\/flowkit\/navigationaction\/pop(_:)","title":"case pop(String)","type":"case"},{"path":"\/documentation\/flowkit\/navigationaction\/poptoroot","title":"case popToRoot","type":"case"},{"path":"\/documentation\/flowkit\/navigationaction\/present(_:)","title":"case present(String)","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/flowkit\/navigationaction\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/flowkit\/navigationaction\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/flowkit\/navigationaction","title":"NavigationAction","type":"enum"},{"children":[{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/flowkit\/outempty\/allcases","title":"static var allCases: [EventEmpty]","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/flowkit\/outempty\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/flowkit\/outempty\/==(_:_:)","title":"static func == (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/flowkit\/outempty\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/flowkit\/outempty\/associated","title":"var associated: (label: String, value: (any InOutProtocol)?)","type":"property"},{"path":"\/documentation\/flowkit\/outempty\/id","title":"var id: String","type":"property"}],"path":"\/documentation\/flowkit\/outempty\/floweventprotocol-implementations","title":"FlowEventProtocol Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/flowkit\/outempty\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/flowkit\/outempty\/hashable-implementations","title":"Hashable Implementations","type":"symbol"}],"path":"\/documentation\/flowkit\/outempty","title":"OutEmpty","type":"enum"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/flowkit\/outsbuilder\/buildarray(_:)","title":"static func buildArray([[any OutJoinProtocol]]) -> [any OutJoinProtocol]","type":"method"},{"path":"\/documentation\/flowkit\/outsbuilder\/buildblock()","title":"static func buildBlock() -> [any OutJoinProtocol]","type":"method"},{"path":"\/documentation\/flowkit\/outsbuilder\/buildblock(_:)-1h26u","title":"static func buildBlock([any OutJoinProtocol]...) -> [any OutJoinProtocol]","type":"method"},{"path":"\/documentation\/flowkit\/outsbuilder\/buildblock(_:)-96rw","title":"static func buildBlock((any OutJoinProtocol)...) -> [any OutJoinProtocol]","type":"method"},{"path":"\/documentation\/flowkit\/outsbuilder\/buildeither(first:)","title":"static func buildEither(first: [any OutJoinProtocol]) -> [any OutJoinProtocol]","type":"method"},{"path":"\/documentation\/flowkit\/outsbuilder\/buildeither(second:)","title":"static func buildEither(second: [any OutJoinProtocol]) -> [any OutJoinProtocol]","type":"method"},{"path":"\/documentation\/flowkit\/outsbuilder\/buildexpression(_:)","title":"static func buildExpression(any OutJoinProtocol) -> [any OutJoinProtocol]","type":"method"},{"path":"\/documentation\/flowkit\/outsbuilder\/buildoptional(_:)","title":"static func buildOptional([any OutJoinProtocol]?) -> [any OutJoinProtocol]","type":"method"},{"path":"\/documentation\/flowkit\/outsbuilder\/buildpartialblock(accumulated:next:)","title":"static func buildPartialBlock(accumulated: [any OutJoinProtocol], next: [any OutJoinProtocol]) -> [any OutJoinProtocol]","type":"method"},{"path":"\/documentation\/flowkit\/outsbuilder\/buildpartialblock(first:)","title":"static func buildPartialBlock(first: [any OutJoinProtocol]) -> [any OutJoinProtocol]","type":"method"}],"path":"\/documentation\/flowkit\/outsbuilder","title":"OutsBuilder","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/flowkit\/results\/model(_:)","title":"case model(any InOutProtocol)","type":"case"},{"path":"\/documentation\/flowkit\/results\/node(_:_:)","title":"case node(any CoordinatorNodeProtocol, any InOutProtocol)","type":"case"}],"path":"\/documentation\/flowkit\/results","title":"Results","type":"enum"},{"title":"Extended Modules","type":"groupMarker"},{"children":[{"title":"Extended Classes","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/flowkit\/combine\/passthroughsubject\/asyncstream","title":"var asyncStream: AsyncStream<Output>","type":"property"}],"path":"\/documentation\/flowkit\/combine\/passthroughsubject","title":"PassthroughSubject","type":"extension"}],"path":"\/documentation\/flowkit\/combine","title":"Combine","type":"extension"},{"children":[{"title":"Extended Structures","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/flowkit\/swift\/string\/classname","title":"var className: String","type":"property"},{"path":"\/documentation\/flowkit\/swift\/string\/firstlettercapitalized","title":"var firstLetterCapitalized: String","type":"property"},{"path":"\/documentation\/flowkit\/swift\/string\/id","title":"var id: String","type":"property"}],"path":"\/documentation\/flowkit\/swift\/string","title":"String","type":"extension"}],"path":"\/documentation\/flowkit\/swift","title":"Swift","type":"extension"},{"children":[{"title":"Extended Protocols","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/flowkit\/swiftui\/view\/preview()","title":"func preview() -> some View","type":"method"},{"path":"\/documentation\/flowkit\/swiftui\/view\/swiftuinavigation()","title":"func swiftUINavigation() -> some View","type":"method"}],"path":"\/documentation\/flowkit\/swiftui\/view","title":"View","type":"extension"},{"title":"Extended Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/flowkit\/swiftui\/binding\/init(bindingoptional:)","title":"init<Wrapped>(bindingOptional: Binding<Wrapped?>)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/flowkit\/swiftui\/binding\/mappedtobool()","title":"func mappedToBool<Wrapped>() -> Binding<Bool>","type":"method"}],"path":"\/documentation\/flowkit\/swiftui\/binding","title":"Binding","type":"extension"}],"path":"\/documentation\/flowkit\/swiftui","title":"SwiftUI","type":"extension"},{"children":[{"title":"Extended Classes","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/flowkit\/uikit\/uiviewcontroller\/resolving","title":"var resolving: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/flowkit\/uikit\/uiviewcontroller\/toswiftui()","title":"func toSwiftUI() -> some UIViewControllerRepresentable","type":"method"}],"path":"\/documentation\/flowkit\/uikit\/uiviewcontroller","title":"UIViewController","type":"extension"}],"path":"\/documentation\/flowkit\/uikit","title":"UIKit","type":"extension"}],"path":"\/documentation\/flowkit","title":"FlowKit","type":"module"}]},"schemaVersion":{"major":0,"minor":1,"patch":1}}