{"hierarchy":{"paths":[["doc:\/\/flowkit.FlowKit\/documentation\/FlowKit","doc:\/\/flowkit.FlowKit\/documentation\/FlowKit\/Resolver"]]},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/flowkit\/resolver\/optional(_:name:args:)-swift.method"]}],"sections":[],"identifier":{"url":"doc:\/\/flowkit.FlowKit\/documentation\/FlowKit\/Resolver\/optional(_:name:args:)-swift.method","interfaceLanguage":"swift"},"metadata":{"role":"symbol","symbolKind":"method","roleHeading":"Instance Method","title":"optional(_:name:args:)","modules":[{"name":"FlowKit"}],"externalID":"s:8ResolverAAC8optional_4name4argsxSgxm_AB4NameVSgypSgtlF","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"optional"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Service"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"Service"},{"text":".Type, ","kind":"text"},{"kind":"externalParam","text":"name"},{"text":": ","kind":"text"},{"text":"Resolver","kind":"typeIdentifier","preciseIdentifier":"s:8ResolverAAC"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:8ResolverAAC4NameV","text":"Name"},{"text":"?, ","kind":"text"},{"kind":"externalParam","text":"args"},{"text":": ","kind":"text"},{"text":"Any","kind":"keyword"},{"kind":"text","text":"?) -> "},{"kind":"typeIdentifier","text":"Service"},{"text":"?","kind":"text"}]},"schemaVersion":{"minor":3,"patch":0,"major":0},"kind":"symbol","primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"final"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"optional","kind":"identifier"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"Service"},{"text":">(","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"type","kind":"internalParam"},{"kind":"text","text":": "},{"text":"Service","kind":"typeIdentifier"},{"kind":"text","text":".Type = Service.self, "},{"text":"name","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:8ResolverAAC","kind":"typeIdentifier","text":"Resolver","identifier":"doc:\/\/flowkit.FlowKit\/documentation\/FlowKit\/Resolver"},{"kind":"text","text":"."},{"text":"Name","preciseIdentifier":"s:8ResolverAAC4NameV","kind":"typeIdentifier","identifier":"doc:\/\/flowkit.FlowKit\/documentation\/FlowKit\/Resolver\/Name"},{"kind":"text","text":"? = nil, "},{"text":"args","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"keyword","text":"Any"},{"text":"? = nil) -> ","kind":"text"},{"text":"Service","kind":"typeIdentifier"},{"kind":"text","text":"?"}],"platforms":["iOS"],"languages":["swift"]}]},{"kind":"parameters","parameters":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Type of Service being resolved. Optional, may be inferred by assignment result type."}]}],"name":"type"},{"name":"name","content":[{"inlineContent":[{"type":"text","text":"Named variant of Service being resolved."}],"type":"paragraph"}]},{"name":"args","content":[{"type":"paragraph","inlineContent":[{"text":"Optional arguments that may be passed to registration factory.","type":"text"}]}]}]},{"kind":"content","content":[{"type":"heading","text":"Return Value","level":2,"anchor":"return-value"},{"inlineContent":[{"text":"Instance of specified Service.","type":"text"}],"type":"paragraph"}]}],"abstract":[{"type":"text","text":"Resolves and returns an optional instance of the given Service type from the current registry or"},{"type":"text","text":" "},{"type":"text","text":"from its parent registries."}],"references":{"doc://flowkit.FlowKit/documentation/FlowKit/Resolver":{"url":"\/documentation\/flowkit\/resolver","identifier":"doc:\/\/flowkit.FlowKit\/documentation\/FlowKit\/Resolver","fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"text":"Resolver","kind":"identifier"}],"type":"topic","abstract":[{"text":"Resolver is a Dependency Injection registry that registers Services for later resolution and","type":"text"},{"type":"text","text":" "},{"text":"injection into newly constructed instances.","type":"text"}],"kind":"symbol","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"Resolver"}],"title":"Resolver"},"doc://flowkit.FlowKit/documentation/FlowKit/Resolver/Name":{"role":"symbol","navigatorTitle":[{"text":"Name","kind":"identifier"}],"abstract":[{"type":"text","text":"Internal class used by Resolver for typed name space support."}],"type":"topic","identifier":"doc:\/\/flowkit.FlowKit\/documentation\/FlowKit\/Resolver\/Name","url":"\/documentation\/flowkit\/resolver\/name","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Name"}],"kind":"symbol","title":"Resolver.Name"},"doc://flowkit.FlowKit/documentation/FlowKit":{"kind":"symbol","title":"FlowKit","identifier":"doc:\/\/flowkit.FlowKit\/documentation\/FlowKit","type":"topic","role":"collection","abstract":[],"url":"\/documentation\/flowkit"},"doc://flowkit.FlowKit/documentation/FlowKit/Resolver/optional(_:name:args:)-swift.method":{"url":"\/documentation\/flowkit\/resolver\/optional(_:name:args:)-swift.method","identifier":"doc:\/\/flowkit.FlowKit\/documentation\/FlowKit\/Resolver\/optional(_:name:args:)-swift.method","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"optional"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"Service"},{"text":">(","kind":"text"},{"kind":"typeIdentifier","text":"Service"},{"text":".Type, ","kind":"text"},{"kind":"externalParam","text":"name"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:8ResolverAAC","text":"Resolver"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:8ResolverAAC4NameV","text":"Name"},{"kind":"text","text":"?, "},{"text":"args","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"keyword","text":"Any"},{"text":"?) -> ","kind":"text"},{"kind":"typeIdentifier","text":"Service"},{"kind":"text","text":"?"}],"abstract":[{"text":"Resolves and returns an optional instance of the given Service type from the current registry or","type":"text"},{"text":" ","type":"text"},{"text":"from its parent registries.","type":"text"}],"title":"optional(_:name:args:)","role":"symbol","type":"topic"}}}