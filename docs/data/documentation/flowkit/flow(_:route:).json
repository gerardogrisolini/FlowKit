{"sections":[],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/flowkit.FlowKit\/documentation\/FlowKit\/Flow(_:route:)"},"hierarchy":{"paths":[["doc:\/\/flowkit.FlowKit\/documentation\/FlowKit"]]},"abstract":[{"type":"text","text":"A macro that creates route associated to the flow, return model and constructor"},{"text":" ","type":"text"},{"text":"For example,","type":"text"}],"schemaVersion":{"patch":0,"major":0,"minor":3},"kind":"symbol","variants":[{"paths":["\/documentation\/flowkit\/flow(_:route:)"],"traits":[{"interfaceLanguage":"swift"}]}],"primaryContentSections":[{"declarations":[{"tokens":[{"kind":"attribute","text":"@attached"},{"text":"(member, names: named(route), named(RouteModel), named(Model), named(init())) ","kind":"text"},{"kind":"keyword","text":"macro"},{"kind":"text","text":" "},{"text":"Flow","kind":"identifier"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"Model"},{"text":", ","kind":"text"},{"kind":"genericParameter","text":"Route"},{"text":">(","kind":"text"},{"text":"_","kind":"externalParam"},{"kind":"text","text":" "},{"kind":"internalParam","text":"model"},{"text":": ","kind":"text"},{"text":"Model","kind":"typeIdentifier"},{"text":".Type, ","kind":"text"},{"text":"route","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Route"},{"text":")","kind":"text"}],"platforms":["iOS"],"languages":["swift"]}],"kind":"declarations"},{"content":[{"type":"heading","anchor":"overview","text":"Overview","level":2},{"type":"codeListing","syntax":null,"code":["@Flow(InOutEmpty.self, route: Routes.valid)","fileprivate final class ValidFlow: FlowProtocol {","    let node = InOutEmptyView.node {","        $0.empty2 ~ InOutEmpty2View.node","        $0.empty3 ~ InOutEmpty3View.node","    }","}"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"generates to"}]},{"code":["@Flow(InOutEmpty.self, route: Routes.valid)","fileprivate final class ValidFlow: FlowProtocol {","    let node = InOutEmptyView.node {","        $0.empty2 ~ InOutEmpty2View.node","        $0.empty3 ~ InOutEmpty3View.node","    }","","    static let route = Routes.valid","    typealias Model = InOutEmpty","    init() { }","}"],"type":"codeListing","syntax":null}],"kind":"content"}],"metadata":{"modules":[{"name":"FlowKit"}],"title":"Flow(_:route:)","symbolKind":"macro","role":"symbol","fragments":[{"text":"macro","kind":"keyword"},{"kind":"text","text":" "},{"text":"Flow","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Model","kind":"genericParameter"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"Route"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"Model"},{"kind":"text","text":".Type, "},{"kind":"externalParam","text":"route"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Route"},{"text":")","kind":"text"}],"roleHeading":"Macro","externalID":"s:4FlowAA_5routeyxm_q_tcr0_lufm"},"references":{"doc://flowkit.FlowKit/documentation/FlowKit/Flow(_:route:)":{"kind":"symbol","type":"topic","abstract":[{"text":"A macro that creates route associated to the flow, return model and constructor","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"For example,"}],"title":"Flow(_:route:)","url":"\/documentation\/flowkit\/flow(_:route:)","role":"symbol","fragments":[{"kind":"keyword","text":"macro"},{"text":" ","kind":"text"},{"text":"Flow","kind":"identifier"},{"kind":"text","text":"<"},{"text":"Model","kind":"genericParameter"},{"text":", ","kind":"text"},{"kind":"genericParameter","text":"Route"},{"kind":"text","text":">("},{"text":"Model","kind":"typeIdentifier"},{"kind":"text","text":".Type, "},{"text":"route","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Route"},{"text":")","kind":"text"}],"identifier":"doc:\/\/flowkit.FlowKit\/documentation\/FlowKit\/Flow(_:route:)"},"doc://flowkit.FlowKit/documentation/FlowKit":{"kind":"symbol","title":"FlowKit","identifier":"doc:\/\/flowkit.FlowKit\/documentation\/FlowKit","type":"topic","role":"collection","abstract":[],"url":"\/documentation\/flowkit"}}}