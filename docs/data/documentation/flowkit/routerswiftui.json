{"kind":"symbol","metadata":{"fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"text":"RouterSwiftUI","kind":"identifier"}],"modules":[{"name":"FlowKit"}],"symbolKind":"class","roleHeading":"Class","title":"RouterSwiftUI","role":"symbol","externalID":"s:13NavigationKit13RouterSwiftUIC","navigatorTitle":[{"kind":"identifier","text":"RouterSwiftUI"}]},"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["iOS"],"languages":["swift"],"tokens":[{"kind":"attribute","text":"@"},{"preciseIdentifier":"s:ScM","text":"MainActor","kind":"attribute"},{"text":" ","kind":"text"},{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"text":"RouterSwiftUI","kind":"identifier"}]}]}],"schemaVersion":{"patch":0,"minor":3,"major":0},"hierarchy":{"paths":[["doc:\/\/flowkit.FlowKit\/documentation\/FlowKit"]]},"topicSections":[{"generated":true,"identifiers":["doc:\/\/flowkit.FlowKit\/documentation\/FlowKit\/RouterSwiftUI\/init()"],"anchor":"Initializers","title":"Initializers"},{"title":"Instance Properties","anchor":"Instance-Properties","generated":true,"identifiers":["doc:\/\/flowkit.FlowKit\/documentation\/FlowKit\/RouterSwiftUI\/action","doc:\/\/flowkit.FlowKit\/documentation\/FlowKit\/RouterSwiftUI\/items","doc:\/\/flowkit.FlowKit\/documentation\/FlowKit\/RouterSwiftUI\/presentMode","doc:\/\/flowkit.FlowKit\/documentation\/FlowKit\/RouterSwiftUI\/routes"]},{"anchor":"Instance-Methods","identifiers":["doc:\/\/flowkit.FlowKit\/documentation\/FlowKit\/RouterSwiftUI\/dismiss()","doc:\/\/flowkit.FlowKit\/documentation\/FlowKit\/RouterSwiftUI\/navigate(route:)","doc:\/\/flowkit.FlowKit\/documentation\/FlowKit\/RouterSwiftUI\/navigate(routeString:)","doc:\/\/flowkit.FlowKit\/documentation\/FlowKit\/RouterSwiftUI\/pop()","doc:\/\/flowkit.FlowKit\/documentation\/FlowKit\/RouterSwiftUI\/popToRoot()","doc:\/\/flowkit.FlowKit\/documentation\/FlowKit\/RouterSwiftUI\/removeRoute(_:)"],"title":"Instance Methods","generated":true},{"title":"Default Implementations","anchor":"Default-Implementations","generated":true,"identifiers":["doc:\/\/flowkit.FlowKit\/documentation\/FlowKit\/RouterSwiftUI\/RouterProtocol-Implementations"]}],"variants":[{"paths":["\/documentation\/flowkit\/routerswiftui"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/flowkit.FlowKit\/documentation\/FlowKit\/RouterSwiftUI"},"sections":[],"relationshipsSections":[{"identifiers":["doc:\/\/flowkit.FlowKit\/documentation\/FlowKit\/RouterProtocol","doc:\/\/flowkit.FlowKit\/s8SendableP"],"kind":"relationships","title":"Conforms To","type":"conformsTo"}],"abstract":[{"text":"A router handler designed for SwiftUI, providing a declarative navigation system.","type":"text"},{"type":"text","text":" "},{"type":"text","text":"It manages navigation actions and routes using Combine and a route-based approach."}],"references":{"doc://flowkit.FlowKit/documentation/FlowKit":{"url":"\/documentation\/flowkit","title":"FlowKit","role":"collection","abstract":[],"type":"topic","identifier":"doc:\/\/flowkit.FlowKit\/documentation\/FlowKit","kind":"symbol"},"doc://flowkit.FlowKit/documentation/FlowKit/RouterSwiftUI/RouterProtocol-Implementations":{"url":"\/documentation\/flowkit\/routerswiftui\/routerprotocol-implementations","abstract":[],"title":"RouterProtocol Implementations","role":"collectionGroup","kind":"article","type":"topic","identifier":"doc:\/\/flowkit.FlowKit\/documentation\/FlowKit\/RouterSwiftUI\/RouterProtocol-Implementations"},"doc://flowkit.FlowKit/documentation/FlowKit/RouterSwiftUI/removeRoute(_:)":{"identifier":"doc:\/\/flowkit.FlowKit\/documentation\/FlowKit\/RouterSwiftUI\/removeRoute(_:)","abstract":[{"text":"Removes a specific route from the navigation stack.","type":"text"}],"kind":"symbol","title":"removeRoute(_:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"removeRoute","kind":"identifier"},{"text":"(","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"kind":"text","text":")"}],"url":"\/documentation\/flowkit\/routerswiftui\/removeroute(_:)","type":"topic","role":"symbol"},"doc://flowkit.FlowKit/documentation/FlowKit/RouterSwiftUI/pop()":{"kind":"symbol","role":"symbol","title":"pop()","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"pop"},{"text":"()","kind":"text"}],"type":"topic","identifier":"doc:\/\/flowkit.FlowKit\/documentation\/FlowKit\/RouterSwiftUI\/pop()","url":"\/documentation\/flowkit\/routerswiftui\/pop()","abstract":[{"type":"text","text":"Pops the top view from the navigation stack."},{"type":"text","text":" "},{"text":"This removes the last route and sends a ","type":"text"},{"type":"codeVoice","code":".pop"},{"type":"text","text":" action."}]},"doc://flowkit.FlowKit/s8SendableP":{"identifier":"doc:\/\/flowkit.FlowKit\/s8SendableP","type":"unresolvable","title":"Swift.Sendable"},"doc://flowkit.FlowKit/documentation/FlowKit/RouterSwiftUI/dismiss()":{"identifier":"doc:\/\/flowkit.FlowKit\/documentation\/FlowKit\/RouterSwiftUI\/dismiss()","title":"dismiss()","role":"symbol","abstract":[{"type":"text","text":"Dismisses the currently presented modal or sheet."},{"text":" ","type":"text"},{"text":"If a modal is active, it removes the associated route and resets ","type":"text"},{"type":"codeVoice","code":"presentMode"},{"text":".","type":"text"}],"url":"\/documentation\/flowkit\/routerswiftui\/dismiss()","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"dismiss"},{"text":"()","kind":"text"}],"kind":"symbol","type":"topic"},"doc://flowkit.FlowKit/documentation/FlowKit/RouterSwiftUI/action":{"kind":"symbol","title":"action","abstract":[{"type":"text","text":"A publisher that sends router-related actions, allowing reactive handling of navigation."}],"identifier":"doc:\/\/flowkit.FlowKit\/documentation\/FlowKit\/RouterSwiftUI\/action","url":"\/documentation\/flowkit\/routerswiftui\/action","type":"topic","fragments":[{"kind":"keyword","text":"let"},{"text":" ","kind":"text"},{"kind":"identifier","text":"action"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7Combine18PassthroughSubjectC","text":"PassthroughSubject","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"preciseIdentifier":"s:13NavigationKit12RouterActionO","kind":"typeIdentifier","text":"RouterAction"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"Never","preciseIdentifier":"s:s5NeverO"},{"text":">","kind":"text"}],"role":"symbol"},"doc://flowkit.FlowKit/documentation/FlowKit/RouterSwiftUI/navigate(routeString:)":{"title":"navigate(routeString:)","kind":"symbol","role":"symbol","identifier":"doc:\/\/flowkit.FlowKit\/documentation\/FlowKit\/RouterSwiftUI\/navigate(routeString:)","type":"topic","abstract":[{"type":"text","text":"Navigates to a specified route string by appending it to the navigation stack."}],"url":"\/documentation\/flowkit\/routerswiftui\/navigate(routestring:)","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"navigate"},{"text":"(","kind":"text"},{"text":"routeString","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:SS","kind":"typeIdentifier","text":"String"},{"text":")","kind":"text"}]},"doc://flowkit.FlowKit/documentation/FlowKit/RouterProtocol":{"fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"RouterProtocol","kind":"identifier"}],"abstract":[{"type":"strong","inlineContent":[{"type":"text","text":"RouterProtocol: Defines Navigation Management"}]}],"title":"RouterProtocol","identifier":"doc:\/\/flowkit.FlowKit\/documentation\/FlowKit\/RouterProtocol","navigatorTitle":[{"kind":"identifier","text":"RouterProtocol"}],"url":"\/documentation\/flowkit\/routerprotocol","kind":"symbol","role":"symbol","type":"topic"},"doc://flowkit.FlowKit/documentation/FlowKit/RouterSwiftUI/routes":{"kind":"symbol","identifier":"doc:\/\/flowkit.FlowKit\/documentation\/FlowKit\/RouterSwiftUI\/routes","role":"symbol","url":"\/documentation\/flowkit\/routerswiftui\/routes","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"routes","kind":"identifier"},{"kind":"text","text":": ["},{"text":"String","preciseIdentifier":"s:SS","kind":"typeIdentifier"},{"text":"]","kind":"text"}],"title":"routes","abstract":[{"text":"Stores the list of active routes in the navigation stack.","type":"text"}],"type":"topic"},"doc://flowkit.FlowKit/documentation/FlowKit/RouterSwiftUI/init()":{"type":"topic","identifier":"doc:\/\/flowkit.FlowKit\/documentation\/FlowKit\/RouterSwiftUI\/init()","url":"\/documentation\/flowkit\/routerswiftui\/init()","title":"init()","abstract":[{"type":"text","text":"Initializes an instance of "},{"type":"codeVoice","code":"NavigationSwiftUI"},{"text":".","type":"text"}],"role":"symbol","kind":"symbol","fragments":[{"text":"init","kind":"identifier"},{"kind":"text","text":"()"}]},"doc://flowkit.FlowKit/documentation/FlowKit/RouterSwiftUI":{"url":"\/documentation\/flowkit\/routerswiftui","abstract":[{"type":"text","text":"A router handler designed for SwiftUI, providing a declarative navigation system."},{"type":"text","text":" "},{"text":"It manages navigation actions and routes using Combine and a route-based approach.","type":"text"}],"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"RouterSwiftUI","kind":"identifier"}],"title":"RouterSwiftUI","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"RouterSwiftUI"}],"kind":"symbol","type":"topic","identifier":"doc:\/\/flowkit.FlowKit\/documentation\/FlowKit\/RouterSwiftUI"},"doc://flowkit.FlowKit/documentation/FlowKit/RouterSwiftUI/presentMode":{"identifier":"doc:\/\/flowkit.FlowKit\/documentation\/FlowKit\/RouterSwiftUI\/presentMode","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"presentMode"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:13NavigationKit11PresentModeO","text":"PresentMode"},{"text":"?","kind":"text"}],"role":"symbol","abstract":[{"type":"text","text":"Stores the current presentation mode (e.g., modal, sheet, full-screen)."}],"kind":"symbol","title":"presentMode","type":"topic","url":"\/documentation\/flowkit\/routerswiftui\/presentmode"},"doc://flowkit.FlowKit/documentation/FlowKit/RouterSwiftUI/navigate(route:)":{"kind":"symbol","role":"symbol","title":"navigate(route:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"navigate","kind":"identifier"},{"kind":"text","text":"("},{"text":"route","kind":"externalParam"},{"kind":"text","text":": some "},{"text":"Routable","kind":"typeIdentifier","preciseIdentifier":"s:13NavigationKit8RoutableP"},{"kind":"text","text":") "},{"text":"throws","kind":"keyword"}],"type":"topic","identifier":"doc:\/\/flowkit.FlowKit\/documentation\/FlowKit\/RouterSwiftUI\/navigate(route:)","url":"\/documentation\/flowkit\/routerswiftui\/navigate(route:)","abstract":[{"type":"text","text":"Navigates using a "},{"type":"codeVoice","code":"Routable"},{"text":" object, ensuring the route exists before navigating.","type":"text"}]},"doc://flowkit.FlowKit/documentation/FlowKit/RouterSwiftUI/items":{"kind":"symbol","url":"\/documentation\/flowkit\/routerswiftui\/items","identifier":"doc:\/\/flowkit.FlowKit\/documentation\/FlowKit\/RouterSwiftUI\/items","role":"symbol","title":"items","type":"topic","abstract":[{"type":"text","text":"Stores router items mapped to their respective routes."}],"fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"items","kind":"identifier"},{"text":": ","kind":"text"},{"text":"RouterItems","kind":"typeIdentifier","preciseIdentifier":"s:13NavigationKit11RouterItemsC"}]},"doc://flowkit.FlowKit/documentation/FlowKit/RouterSwiftUI/popToRoot()":{"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"popToRoot","kind":"identifier"},{"kind":"text","text":"()"}],"type":"topic","identifier":"doc:\/\/flowkit.FlowKit\/documentation\/FlowKit\/RouterSwiftUI\/popToRoot()","kind":"symbol","title":"popToRoot()","role":"symbol","url":"\/documentation\/flowkit\/routerswiftui\/poptoroot()","abstract":[{"type":"text","text":"Pops all view controllers and returns to the root view."},{"type":"text","text":" "},{"type":"text","text":"This clears the entire navigation stack and sends a "},{"type":"codeVoice","code":".popToRoot"},{"type":"text","text":" action."}]}}}