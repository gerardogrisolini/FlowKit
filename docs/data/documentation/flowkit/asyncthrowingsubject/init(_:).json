{"variants":[{"paths":["\/documentation\/flowkit\/asyncthrowingsubject\/init(_:)"],"traits":[{"interfaceLanguage":"swift"}]}],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"init","kind":"keyword"},{"text":"(","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"elementType"},{"kind":"text","text":": "},{"preciseIdentifier":"s:7FlowKit20AsyncThrowingSubjectV7Elementxmfp","text":"Element","kind":"typeIdentifier"},{"text":".Type = Element.self)","kind":"text"}],"platforms":["iOS"],"languages":["swift"]}]},{"parameters":[{"content":[{"type":"paragraph","inlineContent":[{"text":"The type of element the subject produces. Defaults to the inferred ","type":"text"},{"code":"Element","type":"codeVoice"},{"type":"text","text":" type."}]}],"name":"elementType"}],"kind":"parameters"}],"metadata":{"symbolKind":"init","modules":[{"name":"FlowKit"}],"roleHeading":"Initializer","fragments":[{"kind":"identifier","text":"init"},{"text":"(","kind":"text"},{"text":"Element","kind":"typeIdentifier","preciseIdentifier":"s:7FlowKit20AsyncThrowingSubjectV7Elementxmfp"},{"kind":"text","text":".Type)"}],"role":"symbol","externalID":"s:7FlowKit20AsyncThrowingSubjectVyACyxGxmcfc","title":"init(_:)"},"sections":[],"identifier":{"url":"doc:\/\/flowkit.FlowKit\/documentation\/FlowKit\/AsyncThrowingSubject\/init(_:)","interfaceLanguage":"swift"},"kind":"symbol","abstract":[{"text":"Initializes a new ","type":"text"},{"type":"codeVoice","code":"AsyncThrowingSubject"},{"type":"text","text":"."}],"hierarchy":{"paths":[["doc:\/\/flowkit.FlowKit\/documentation\/FlowKit","doc:\/\/flowkit.FlowKit\/documentation\/FlowKit\/AsyncThrowingSubject"]]},"schemaVersion":{"patch":0,"minor":3,"major":0},"references":{"doc://flowkit.FlowKit/documentation/FlowKit/AsyncThrowingSubject":{"kind":"symbol","type":"topic","title":"AsyncThrowingSubject","identifier":"doc:\/\/flowkit.FlowKit\/documentation\/FlowKit\/AsyncThrowingSubject","role":"symbol","navigatorTitle":[{"text":"AsyncThrowingSubject","kind":"identifier"}],"abstract":[{"text":"A subject that allows for asynchronously sending values or terminating with an error.","type":"text"},{"type":"text","text":" "},{"type":"codeVoice","code":"AsyncThrowingSubject"},{"type":"text","text":" acts as a bridge between imperative code and asynchronous code, enabling"},{"type":"text","text":" "},{"text":"you to send values to an ","type":"text"},{"code":"AsyncSequence","type":"codeVoice"},{"type":"text","text":" consumer while handling potential errors gracefully."}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"AsyncThrowingSubject","kind":"identifier"}],"url":"\/documentation\/flowkit\/asyncthrowingsubject"},"doc://flowkit.FlowKit/documentation/FlowKit":{"type":"topic","kind":"symbol","identifier":"doc:\/\/flowkit.FlowKit\/documentation\/FlowKit","title":"FlowKit","role":"collection","abstract":[],"url":"\/documentation\/flowkit"},"doc://flowkit.FlowKit/documentation/FlowKit/AsyncThrowingSubject/init(_:)":{"identifier":"doc:\/\/flowkit.FlowKit\/documentation\/FlowKit\/AsyncThrowingSubject\/init(_:)","type":"topic","abstract":[{"text":"Initializes a new ","type":"text"},{"type":"codeVoice","code":"AsyncThrowingSubject"},{"type":"text","text":"."}],"title":"init(_:)","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","text":"Element","preciseIdentifier":"s:7FlowKit20AsyncThrowingSubjectV7Elementxmfp"},{"text":".Type)","kind":"text"}],"url":"\/documentation\/flowkit\/asyncthrowingsubject\/init(_:)","kind":"symbol","role":"symbol"}}}