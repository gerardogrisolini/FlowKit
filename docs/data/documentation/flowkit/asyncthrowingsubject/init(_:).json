{"sections":[],"primaryContentSections":[{"declarations":[{"languages":["swift"],"tokens":[{"text":"init","kind":"keyword"},{"text":"(","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"elementType"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:7FlowKit20AsyncThrowingSubjectV7Elementxmfp","text":"Element"},{"text":".Type = Element.self)","kind":"text"}],"platforms":["iOS"]}],"kind":"declarations"},{"kind":"parameters","parameters":[{"content":[{"type":"paragraph","inlineContent":[{"text":"The type of element the subject produces. Defaults to the inferred ","type":"text"},{"type":"codeVoice","code":"Element"},{"type":"text","text":" type."}]}],"name":"elementType"}]}],"abstract":[{"text":"Initializes a new ","type":"text"},{"code":"AsyncThrowingSubject","type":"codeVoice"},{"text":".","type":"text"}],"variants":[{"paths":["\/documentation\/flowkit\/asyncthrowingsubject\/init(_:)"],"traits":[{"interfaceLanguage":"swift"}]}],"hierarchy":{"paths":[["doc:\/\/flowkit.FlowKit\/documentation\/FlowKit","doc:\/\/flowkit.FlowKit\/documentation\/FlowKit\/AsyncThrowingSubject"]]},"schemaVersion":{"major":0,"minor":3,"patch":0},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/flowkit.FlowKit\/documentation\/FlowKit\/AsyncThrowingSubject\/init(_:)"},"kind":"symbol","metadata":{"roleHeading":"Initializer","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:7FlowKit20AsyncThrowingSubjectV7Elementxmfp","text":"Element"},{"kind":"text","text":".Type)"}],"role":"symbol","title":"init(_:)","symbolKind":"init","modules":[{"name":"FlowKit"}],"externalID":"s:7FlowKit20AsyncThrowingSubjectVyACyxGxmcfc"},"references":{"doc://flowkit.FlowKit/documentation/FlowKit/AsyncThrowingSubject":{"type":"topic","url":"\/documentation\/flowkit\/asyncthrowingsubject","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"AsyncThrowingSubject","kind":"identifier"}],"abstract":[{"text":"A subject that allows for asynchronously sending values or terminating with an error.","type":"text"},{"type":"text","text":" "},{"type":"codeVoice","code":"AsyncThrowingSubject"},{"type":"text","text":" acts as a bridge between imperative code and asynchronous code, enabling"},{"type":"text","text":" "},{"type":"text","text":"you to send values to an "},{"code":"AsyncSequence","type":"codeVoice"},{"type":"text","text":" consumer while handling potential errors gracefully."}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"AsyncThrowingSubject"}],"identifier":"doc:\/\/flowkit.FlowKit\/documentation\/FlowKit\/AsyncThrowingSubject","kind":"symbol","title":"AsyncThrowingSubject"},"doc://flowkit.FlowKit/documentation/FlowKit/AsyncThrowingSubject/init(_:)":{"fragments":[{"text":"init","kind":"identifier"},{"kind":"text","text":"("},{"preciseIdentifier":"s:7FlowKit20AsyncThrowingSubjectV7Elementxmfp","text":"Element","kind":"typeIdentifier"},{"text":".Type)","kind":"text"}],"identifier":"doc:\/\/flowkit.FlowKit\/documentation\/FlowKit\/AsyncThrowingSubject\/init(_:)","role":"symbol","title":"init(_:)","abstract":[{"type":"text","text":"Initializes a new "},{"type":"codeVoice","code":"AsyncThrowingSubject"},{"type":"text","text":"."}],"url":"\/documentation\/flowkit\/asyncthrowingsubject\/init(_:)","kind":"symbol","type":"topic"},"doc://flowkit.FlowKit/documentation/FlowKit":{"type":"topic","url":"\/documentation\/flowkit","role":"collection","abstract":[],"identifier":"doc:\/\/flowkit.FlowKit\/documentation\/FlowKit","kind":"symbol","title":"FlowKit"}}}