{"sections":[],"abstract":[{"type":"text","text":"Initializes a new "},{"code":"AsyncThrowingSubject","type":"codeVoice"},{"type":"text","text":"."}],"kind":"symbol","primaryContentSections":[{"declarations":[{"languages":["swift"],"platforms":["iOS"],"tokens":[{"kind":"keyword","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"_"},{"text":" ","kind":"text"},{"text":"elementType","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"Element","preciseIdentifier":"s:7FlowKit20AsyncThrowingSubjectV7Elementxmfp","kind":"typeIdentifier"},{"text":".Type = Element.self)","kind":"text"}]}],"kind":"declarations"},{"kind":"parameters","parameters":[{"name":"elementType","content":[{"type":"paragraph","inlineContent":[{"text":"The type of element the subject produces. Defaults to the inferred ","type":"text"},{"code":"Element","type":"codeVoice"},{"type":"text","text":" type."}]}]}]}],"metadata":{"modules":[{"name":"FlowKit"}],"symbolKind":"init","externalID":"s:7FlowKit20AsyncThrowingSubjectVyACyxGxmcfc","roleHeading":"Initializer","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","text":"Element","preciseIdentifier":"s:7FlowKit20AsyncThrowingSubjectV7Elementxmfp"},{"text":".Type)","kind":"text"}],"title":"init(_:)","role":"symbol"},"hierarchy":{"paths":[["doc:\/\/flowkit.FlowKit\/documentation\/FlowKit","doc:\/\/flowkit.FlowKit\/documentation\/FlowKit\/AsyncThrowingSubject"]]},"schemaVersion":{"major":0,"minor":3,"patch":0},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/flowkit.FlowKit\/documentation\/FlowKit\/AsyncThrowingSubject\/init(_:)"},"variants":[{"paths":["\/documentation\/flowkit\/asyncthrowingsubject\/init(_:)"],"traits":[{"interfaceLanguage":"swift"}]}],"references":{"doc://flowkit.FlowKit/documentation/FlowKit":{"kind":"symbol","title":"FlowKit","identifier":"doc:\/\/flowkit.FlowKit\/documentation\/FlowKit","type":"topic","role":"collection","abstract":[],"url":"\/documentation\/flowkit"},"doc://flowkit.FlowKit/documentation/FlowKit/AsyncThrowingSubject":{"type":"topic","identifier":"doc:\/\/flowkit.FlowKit\/documentation\/FlowKit\/AsyncThrowingSubject","title":"AsyncThrowingSubject","abstract":[{"type":"text","text":"A subject that allows for asynchronously sending values or terminating with an error."},{"type":"text","text":" "},{"type":"codeVoice","code":"AsyncThrowingSubject"},{"type":"text","text":" acts as a bridge between imperative code and asynchronous code, enabling"},{"text":" ","type":"text"},{"type":"text","text":"you to send values to an "},{"code":"AsyncSequence","type":"codeVoice"},{"text":" consumer while handling potential errors gracefully.","type":"text"}],"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"AsyncThrowingSubject"}],"url":"\/documentation\/flowkit\/asyncthrowingsubject","kind":"symbol","role":"symbol","navigatorTitle":[{"text":"AsyncThrowingSubject","kind":"identifier"}]},"doc://flowkit.FlowKit/documentation/FlowKit/AsyncThrowingSubject/init(_:)":{"kind":"symbol","identifier":"doc:\/\/flowkit.FlowKit\/documentation\/FlowKit\/AsyncThrowingSubject\/init(_:)","type":"topic","title":"init(_:)","url":"\/documentation\/flowkit\/asyncthrowingsubject\/init(_:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"text":"Element","kind":"typeIdentifier","preciseIdentifier":"s:7FlowKit20AsyncThrowingSubjectV7Elementxmfp"},{"text":".Type)","kind":"text"}],"role":"symbol","abstract":[{"type":"text","text":"Initializes a new "},{"code":"AsyncThrowingSubject","type":"codeVoice"},{"text":".","type":"text"}]}}}