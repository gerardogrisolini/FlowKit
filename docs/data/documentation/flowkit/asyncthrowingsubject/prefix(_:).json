{"metadata":{"extendedModule":"_Concurrency","platforms":[{"name":"iOS","deprecated":false,"beta":false,"unavailable":false,"introducedAt":"13.0"},{"unavailable":false,"name":"iPadOS","deprecated":false,"beta":false,"introducedAt":"13.0"},{"unavailable":false,"name":"Mac Catalyst","beta":false,"introducedAt":"13.0","deprecated":false},{"deprecated":false,"beta":false,"unavailable":false,"name":"macOS","introducedAt":"10.15"},{"beta":false,"deprecated":false,"introducedAt":"13.0","name":"tvOS","unavailable":false},{"deprecated":false,"introducedAt":"6.0","beta":false,"name":"watchOS","unavailable":false}],"title":"prefix(_:)","symbolKind":"method","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"prefix"},{"kind":"text","text":"("},{"preciseIdentifier":"s:Si","text":"Int","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:12_Concurrency19AsyncPrefixSequenceV","text":"AsyncPrefixSequence","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":">"}],"modules":[{"relatedModules":["_Concurrency"],"name":"FlowKit"}],"roleHeading":"Instance Method","role":"symbol","externalID":"s:Sci12_ConcurrencyE6prefixyAA19AsyncPrefixSequenceVyxGSiF::SYNTHESIZED::s:7FlowKit20AsyncThrowingSubjectV"},"hierarchy":{"paths":[["doc:\/\/flowkit.FlowKit\/documentation\/FlowKit","doc:\/\/flowkit.FlowKit\/documentation\/FlowKit\/AsyncThrowingSubject","doc:\/\/flowkit.FlowKit\/documentation\/FlowKit\/AsyncThrowingSubject\/AsyncSequence-Implementations"]]},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/flowkit.FlowKit\/documentation\/FlowKit\/AsyncThrowingSubject\/prefix(_:)"},"abstract":[{"type":"text","text":"Inherited from "},{"type":"codeVoice","code":"AsyncSequence.prefix(_:)"},{"text":".","type":"text"}],"schemaVersion":{"patch":0,"minor":3,"major":0},"sections":[],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/flowkit\/asyncthrowingsubject\/prefix(_:)"]}],"kind":"symbol","primaryContentSections":[{"declarations":[{"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"prefix","kind":"identifier"},{"kind":"text","text":"("},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"count"},{"kind":"text","text":": "},{"text":"Int","kind":"typeIdentifier","preciseIdentifier":"s:Si"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:12_Concurrency19AsyncPrefixSequenceV","text":"AsyncPrefixSequence"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":">","kind":"text"}],"platforms":["iOS"],"languages":["swift"]}],"kind":"declarations"}],"references":{"doc://flowkit.FlowKit/documentation/FlowKit/AsyncThrowingSubject/prefix(_:)":{"type":"topic","url":"\/documentation\/flowkit\/asyncthrowingsubject\/prefix(_:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"prefix","kind":"identifier"},{"text":"(","kind":"text"},{"preciseIdentifier":"s:Si","text":"Int","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:12_Concurrency19AsyncPrefixSequenceV","text":"AsyncPrefixSequence","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":">"}],"abstract":[],"identifier":"doc:\/\/flowkit.FlowKit\/documentation\/FlowKit\/AsyncThrowingSubject\/prefix(_:)","title":"prefix(_:)","kind":"symbol","role":"symbol"},"doc://flowkit.FlowKit/documentation/FlowKit":{"abstract":[],"kind":"symbol","url":"\/documentation\/flowkit","title":"FlowKit","identifier":"doc:\/\/flowkit.FlowKit\/documentation\/FlowKit","type":"topic","role":"collection"},"doc://flowkit.FlowKit/documentation/FlowKit/AsyncThrowingSubject":{"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"AsyncThrowingSubject"}],"url":"\/documentation\/flowkit\/asyncthrowingsubject","type":"topic","abstract":[{"text":"A subject that allows for asynchronously sending values or terminating with an error.","type":"text"},{"type":"text","text":" "},{"type":"codeVoice","code":"AsyncThrowingSubject"},{"text":" acts as a bridge between imperative code and asynchronous code, enabling","type":"text"},{"type":"text","text":" "},{"text":"you to send values to an ","type":"text"},{"type":"codeVoice","code":"AsyncSequence"},{"text":" consumer while handling potential errors gracefully.","type":"text"}],"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"AsyncThrowingSubject"}],"title":"AsyncThrowingSubject","role":"symbol","identifier":"doc:\/\/flowkit.FlowKit\/documentation\/FlowKit\/AsyncThrowingSubject"},"doc://flowkit.FlowKit/documentation/FlowKit/AsyncThrowingSubject/AsyncSequence-Implementations":{"url":"\/documentation\/flowkit\/asyncthrowingsubject\/asyncsequence-implementations","type":"topic","abstract":[],"kind":"article","title":"AsyncSequence Implementations","role":"collectionGroup","identifier":"doc:\/\/flowkit.FlowKit\/documentation\/FlowKit\/AsyncThrowingSubject\/AsyncSequence-Implementations"}}}