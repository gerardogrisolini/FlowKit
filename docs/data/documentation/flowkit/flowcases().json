{"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/flowkit.FlowKit\/documentation\/FlowKit\/FlowCases()"},"metadata":{"roleHeading":"Macro","title":"FlowCases()","role":"symbol","modules":[{"name":"FlowKit"}],"fragments":[{"text":"macro","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"FlowCases"},{"text":"()","kind":"text"}],"externalID":"s:9FlowCasesAAyycfm","symbolKind":"macro"},"sections":[],"kind":"symbol","abstract":[{"text":"A macro that creates named cases for an enum, CaseIterable implementation, function to update associated value.","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"For example,"}],"hierarchy":{"paths":[["doc:\/\/flowkit.FlowKit\/documentation\/FlowKit"]]},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/flowkit\/flowcases()"]}],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"@attached","kind":"attribute"},{"kind":"text","text":"(member, names: arbitrary) "},{"text":"macro","kind":"keyword"},{"text":" ","kind":"text"},{"text":"FlowCases","kind":"identifier"},{"text":"()","kind":"text"}],"platforms":["iOS"],"languages":["swift"]}]},{"kind":"content","content":[{"text":"Overview","type":"heading","level":2,"anchor":"overview"},{"syntax":null,"type":"codeListing","code":["@FlowCases","enum Out: FlowOutProtocol {","    case empty2(InOutEmpty2)","    case empty3(InOutEmpty3)","}"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"generates to"}]},{"type":"codeListing","code":["@FlowCases","enum Out: FlowOutProtocol {","    case empty2(InOutEmpty2)","    case empty3(InOutEmpty3)","    ","    static var allCases: [Out] {","        [.empty2(InOutEmpty2()), .empty3(InOutEmpty3())]","    }","","    func udpate(associatedValue: some InOutProtocol) -> Self {","        switch self {","        case .empty2(_):","            guard let model = associatedValue as? InOutEmpty2 else {","                return self","            }","            return .empty2(model)","        case .empty3(_):","            guard let model = associatedValue as? InOutEmpty3 else {","                return self","            }","            return .empty3(model)","        }","    }","","    static var empty2: (out: Self, model: InOutEmpty2) {","        (.empty2(InOutEmpty2()), InOutEmpty2())","    }","","    static var empty3: (out: Self, model: InOutEmpty3) {","        (.empty3(InOutEmpty3()), InOutEmpty3())","    }","}"],"syntax":null},{"inlineContent":[{"type":"text","text":"If the enum is "},{"type":"codeVoice","code":"public"},{"text":", the generated ","type":"text"},{"code":"ID","type":"codeVoice"},{"type":"text","text":" enum and the"},{"type":"text","text":" "},{"text":"generated ","type":"text"},{"code":"id","type":"codeVoice"},{"type":"text","text":" accessor will also be "},{"type":"codeVoice","code":"public"}],"type":"paragraph"}]}],"schemaVersion":{"patch":0,"major":0,"minor":3},"references":{"doc://flowkit.FlowKit/documentation/FlowKit":{"kind":"symbol","title":"FlowKit","identifier":"doc:\/\/flowkit.FlowKit\/documentation\/FlowKit","type":"topic","role":"collection","abstract":[],"url":"\/documentation\/flowkit"},"doc://flowkit.FlowKit/documentation/FlowKit/FlowCases()":{"type":"topic","title":"FlowCases()","url":"\/documentation\/flowkit\/flowcases()","role":"symbol","kind":"symbol","fragments":[{"kind":"keyword","text":"macro"},{"kind":"text","text":" "},{"text":"FlowCases","kind":"identifier"},{"text":"()","kind":"text"}],"identifier":"doc:\/\/flowkit.FlowKit\/documentation\/FlowKit\/FlowCases()","abstract":[{"type":"text","text":"A macro that creates named cases for an enum, CaseIterable implementation, function to update associated value."},{"text":" ","type":"text"},{"text":"For example,","type":"text"}]}}}