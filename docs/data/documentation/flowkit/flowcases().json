{"kind":"symbol","identifier":{"url":"doc:\/\/flowkit.FlowKit\/documentation\/FlowKit\/FlowCases()","interfaceLanguage":"swift"},"sections":[],"metadata":{"fragments":[{"text":"macro","kind":"keyword"},{"kind":"text","text":" "},{"text":"FlowCases","kind":"identifier"},{"text":"()","kind":"text"}],"title":"FlowCases()","role":"symbol","symbolKind":"macro","modules":[{"name":"FlowKit"}],"roleHeading":"Macro","externalID":"s:9FlowCasesAAyycfm"},"abstract":[{"type":"text","text":"A macro that creates named cases for an enum, CaseIterable implementation, function to update associated value."},{"text":" ","type":"text"},{"text":"For example,","type":"text"}],"schemaVersion":{"major":0,"minor":3,"patch":0},"hierarchy":{"paths":[["doc:\/\/flowkit.FlowKit\/documentation\/FlowKit"]]},"primaryContentSections":[{"declarations":[{"platforms":["iOS"],"languages":["swift"],"tokens":[{"kind":"attribute","text":"@attached"},{"kind":"text","text":"(member, names: arbitrary) "},{"text":"macro","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"FlowCases"},{"text":"()","kind":"text"}]}],"kind":"declarations"},{"content":[{"level":2,"text":"Overview","anchor":"overview","type":"heading"},{"code":["@FlowCases","enum Out: FlowOutProtocol {","    case empty2(InOutEmpty2)","    case empty3(InOutEmpty3)","}"],"type":"codeListing","syntax":null},{"type":"paragraph","inlineContent":[{"type":"text","text":"generates to"}]},{"type":"codeListing","code":["@FlowCases","enum Out: FlowOutProtocol {","    case empty2(InOutEmpty2)","    case empty3(InOutEmpty3)","    ","    static var allCases: [Out] {","        [.empty2(InOutEmpty2()), .empty3(InOutEmpty3())]","    }","","    func udpate(associatedValue: some InOutProtocol) -> Self {","        switch self {","        case .empty2(_):","            guard let model = associatedValue as? InOutEmpty2 else {","                return self","            }","            return .empty2(model)","        case .empty3(_):","            guard let model = associatedValue as? InOutEmpty3 else {","                return self","            }","            return .empty3(model)","        }","    }","","    static var empty2: (out: Self, model: InOutEmpty2) {","        (.empty2(InOutEmpty2()), InOutEmpty2())","    }","","    static var empty3: (out: Self, model: InOutEmpty3) {","        (.empty3(InOutEmpty3()), InOutEmpty3())","    }","}"],"syntax":null},{"inlineContent":[{"type":"text","text":"If the enum is "},{"code":"public","type":"codeVoice"},{"text":", the generated ","type":"text"},{"type":"codeVoice","code":"ID"},{"text":" enum and the","type":"text"},{"text":" ","type":"text"},{"text":"generated ","type":"text"},{"type":"codeVoice","code":"id"},{"type":"text","text":" accessor will also be "},{"code":"public","type":"codeVoice"}],"type":"paragraph"}],"kind":"content"}],"variants":[{"paths":["\/documentation\/flowkit\/flowcases()"],"traits":[{"interfaceLanguage":"swift"}]}],"references":{"doc://flowkit.FlowKit/documentation/FlowKit/FlowCases()":{"kind":"symbol","fragments":[{"text":"macro","kind":"keyword"},{"text":" ","kind":"text"},{"text":"FlowCases","kind":"identifier"},{"text":"()","kind":"text"}],"abstract":[{"text":"A macro that creates named cases for an enum, CaseIterable implementation, function to update associated value.","type":"text"},{"type":"text","text":" "},{"type":"text","text":"For example,"}],"type":"topic","role":"symbol","identifier":"doc:\/\/flowkit.FlowKit\/documentation\/FlowKit\/FlowCases()","url":"\/documentation\/flowkit\/flowcases()","title":"FlowCases()"},"doc://flowkit.FlowKit/documentation/FlowKit":{"abstract":[],"identifier":"doc:\/\/flowkit.FlowKit\/documentation\/FlowKit","type":"topic","title":"FlowKit","url":"\/documentation\/flowkit","kind":"symbol","role":"collection"}}}