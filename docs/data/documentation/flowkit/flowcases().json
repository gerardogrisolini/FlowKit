{"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/flowkit.FlowKit\/documentation\/FlowKit\/FlowCases()"},"hierarchy":{"paths":[["doc:\/\/flowkit.FlowKit\/documentation\/FlowKit"]]},"abstract":[{"text":"A macro that creates named cases for an enum, CaseIterable implementation, function to update associated value.","type":"text"},{"type":"text","text":" "},{"type":"text","text":"For example,"}],"kind":"symbol","sections":[],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/flowkit\/flowcases()"]}],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"attribute","text":"@attached"},{"text":"(member, names: arbitrary) ","kind":"text"},{"kind":"keyword","text":"macro"},{"text":" ","kind":"text"},{"text":"FlowCases","kind":"identifier"},{"kind":"text","text":"()"}],"platforms":["iOS"],"languages":["swift"]}]},{"kind":"content","content":[{"level":2,"anchor":"overview","type":"heading","text":"Overview"},{"code":["@FlowCases","enum Out: FlowOutProtocol {","    case empty2(InOutEmpty2)","    case empty3(InOutEmpty3)","}"],"type":"codeListing","syntax":null},{"type":"paragraph","inlineContent":[{"text":"generates to","type":"text"}]},{"syntax":null,"code":["@FlowCases","enum Out: FlowOutProtocol {","    case empty2(InOutEmpty2)","    case empty3(InOutEmpty3)","    ","    static var allCases: [Out] {","        [.empty2(InOutEmpty2()), .empty3(InOutEmpty3())]","    }","","    func udpate(associatedValue: some InOutProtocol) -> Self {","        switch self {","        case .empty2(_):","            guard let model = associatedValue as? InOutEmpty2 else {","                return self","            }","            return .empty2(model)","        case .empty3(_):","            guard let model = associatedValue as? InOutEmpty3 else {","                return self","            }","            return .empty3(model)","        }","    }","","    static var empty2: (out: Self, model: InOutEmpty2) {","        (.empty2(InOutEmpty2()), InOutEmpty2())","    }","","    static var empty3: (out: Self, model: InOutEmpty3) {","        (.empty3(InOutEmpty3()), InOutEmpty3())","    }","}"],"type":"codeListing"},{"type":"paragraph","inlineContent":[{"text":"If the enum is ","type":"text"},{"code":"public","type":"codeVoice"},{"text":", the generated ","type":"text"},{"type":"codeVoice","code":"ID"},{"text":" enum and the","type":"text"},{"text":" ","type":"text"},{"text":"generated ","type":"text"},{"type":"codeVoice","code":"id"},{"type":"text","text":" accessor will also be "},{"type":"codeVoice","code":"public"}]}]}],"metadata":{"fragments":[{"text":"macro","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"FlowCases"},{"kind":"text","text":"()"}],"role":"symbol","modules":[{"name":"FlowKit"}],"title":"FlowCases()","roleHeading":"Macro","symbolKind":"macro","externalID":"s:9FlowCasesAAyycfm"},"schemaVersion":{"minor":3,"major":0,"patch":0},"references":{"doc://flowkit.FlowKit/documentation/FlowKit":{"identifier":"doc:\/\/flowkit.FlowKit\/documentation\/FlowKit","type":"topic","kind":"symbol","title":"FlowKit","url":"\/documentation\/flowkit","abstract":[],"role":"collection"},"doc://flowkit.FlowKit/documentation/FlowKit/FlowCases()":{"identifier":"doc:\/\/flowkit.FlowKit\/documentation\/FlowKit\/FlowCases()","fragments":[{"text":"macro","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"FlowCases"},{"text":"()","kind":"text"}],"abstract":[{"text":"A macro that creates named cases for an enum, CaseIterable implementation, function to update associated value.","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"For example,"}],"kind":"symbol","title":"FlowCases()","type":"topic","role":"symbol","url":"\/documentation\/flowkit\/flowcases()"}}}