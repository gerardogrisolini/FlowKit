{"metadata":{"roleHeading":"Macro","modules":[{"name":"FlowKit"}],"title":"FlowCases()","externalID":"s:9FlowCasesAAyycfm","role":"symbol","symbolKind":"macro","fragments":[{"text":"macro","kind":"keyword"},{"kind":"text","text":" "},{"text":"FlowCases","kind":"identifier"},{"text":"()","kind":"text"}]},"identifier":{"url":"doc:\/\/flowkit.FlowKit\/documentation\/FlowKit\/FlowCases()","interfaceLanguage":"swift"},"hierarchy":{"paths":[["doc:\/\/flowkit.FlowKit\/documentation\/FlowKit"]]},"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"@attached","kind":"attribute"},{"text":"(member, names: arbitrary) ","kind":"text"},{"kind":"keyword","text":"macro"},{"text":" ","kind":"text"},{"kind":"identifier","text":"FlowCases"},{"kind":"text","text":"()"}],"languages":["swift"],"platforms":["iOS"]}]},{"kind":"content","content":[{"type":"heading","text":"Overview","level":2,"anchor":"overview"},{"syntax":null,"type":"codeListing","code":["@FlowCases","enum Out: FlowOutProtocol {","    case empty2(InOutEmpty2)","    case empty3(InOutEmpty3)","}"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"generates to"}]},{"type":"codeListing","syntax":null,"code":["@FlowCases","enum Out: FlowOutProtocol {","    case empty2(InOutEmpty2)","    case empty3(InOutEmpty3)","    ","    static var allCases: [Out] {","        [.empty2(InOutEmpty2()), .empty3(InOutEmpty3())]","    }","","    func udpate(associatedValue: some InOutProtocol) -> Self {","        switch self {","        case .empty2(_):","            guard let model = associatedValue as? InOutEmpty2 else {","                return self","            }","            return .empty2(model)","        case .empty3(_):","            guard let model = associatedValue as? InOutEmpty3 else {","                return self","            }","            return .empty3(model)","        }","    }","","    static var empty2: (out: Self, model: InOutEmpty2) {","        (.empty2(InOutEmpty2()), InOutEmpty2())","    }","","    static var empty3: (out: Self, model: InOutEmpty3) {","        (.empty3(InOutEmpty3()), InOutEmpty3())","    }","}"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"If the enum is "},{"type":"codeVoice","code":"public"},{"text":", the generated ","type":"text"},{"code":"ID","type":"codeVoice"},{"type":"text","text":" enum and the"},{"type":"text","text":" "},{"type":"text","text":"generated "},{"type":"codeVoice","code":"id"},{"type":"text","text":" accessor will also be "},{"type":"codeVoice","code":"public"}]}]}],"kind":"symbol","abstract":[{"text":"A macro that creates named cases for an enum, CaseIterable implementation, function to update associated value.","type":"text"},{"type":"text","text":" "},{"type":"text","text":"For example,"}],"variants":[{"paths":["\/documentation\/flowkit\/flowcases()"],"traits":[{"interfaceLanguage":"swift"}]}],"sections":[],"schemaVersion":{"major":0,"minor":3,"patch":0},"references":{"doc://flowkit.FlowKit/documentation/FlowKit/FlowCases()":{"role":"symbol","title":"FlowCases()","url":"\/documentation\/flowkit\/flowcases()","identifier":"doc:\/\/flowkit.FlowKit\/documentation\/FlowKit\/FlowCases()","type":"topic","fragments":[{"kind":"keyword","text":"macro"},{"text":" ","kind":"text"},{"text":"FlowCases","kind":"identifier"},{"text":"()","kind":"text"}],"abstract":[{"type":"text","text":"A macro that creates named cases for an enum, CaseIterable implementation, function to update associated value."},{"text":" ","type":"text"},{"type":"text","text":"For example,"}],"kind":"symbol"},"doc://flowkit.FlowKit/documentation/FlowKit":{"type":"topic","url":"\/documentation\/flowkit","role":"collection","abstract":[],"identifier":"doc:\/\/flowkit.FlowKit\/documentation\/FlowKit","kind":"symbol","title":"FlowKit"}}}