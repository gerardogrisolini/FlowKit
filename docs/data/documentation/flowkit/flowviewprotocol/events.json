{"hierarchy":{"paths":[["doc:\/\/flowkit.FlowKit\/documentation\/FlowKit","doc:\/\/flowkit.FlowKit\/documentation\/FlowKit\/FlowViewProtocol"]]},"schemaVersion":{"minor":3,"major":0,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/flowkit\/flowviewprotocol\/events"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/flowkit.FlowKit\/documentation\/FlowKit\/FlowViewProtocol\/events"},"metadata":{"modules":[{"name":"FlowKit"}],"roleHeading":"Instance Property","required":true,"externalID":"s:7FlowKit0A12ViewProtocolP6eventsAA20AsyncThrowingSubjectVyAA16CoordinatorEventOGvp","symbolKind":"property","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"kind":"identifier","text":"events"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:7FlowKit20AsyncThrowingSubjectV","text":"AsyncThrowingSubject"},{"text":"<","kind":"text"},{"text":"CoordinatorEvent","preciseIdentifier":"s:7FlowKit16CoordinatorEventO","kind":"typeIdentifier"},{"text":">","kind":"text"}],"role":"symbol","title":"events"},"kind":"symbol","abstract":[{"text":"AsyncSequence for manage the events","type":"text"}],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"events","kind":"identifier"},{"kind":"text","text":": "},{"text":"AsyncThrowingSubject","kind":"typeIdentifier","identifier":"doc:\/\/flowkit.FlowKit\/documentation\/FlowKit\/AsyncThrowingSubject","preciseIdentifier":"s:7FlowKit20AsyncThrowingSubjectV"},{"text":"<","kind":"text"},{"identifier":"doc:\/\/flowkit.FlowKit\/documentation\/FlowKit\/CoordinatorEvent","kind":"typeIdentifier","text":"CoordinatorEvent","preciseIdentifier":"s:7FlowKit16CoordinatorEventO"},{"kind":"text","text":"> { "},{"text":"get","kind":"keyword"},{"text":" }","kind":"text"}],"platforms":["iOS"],"languages":["swift"]}]}],"references":{"doc://flowkit.FlowKit/documentation/FlowKit/FlowViewProtocol":{"url":"\/documentation\/flowkit\/flowviewprotocol","role":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"text":"FlowViewProtocol","kind":"identifier"}],"navigatorTitle":[{"text":"FlowViewProtocol","kind":"identifier"}],"type":"topic","title":"FlowViewProtocol","kind":"symbol","identifier":"doc:\/\/flowkit.FlowKit\/documentation\/FlowKit\/FlowViewProtocol","abstract":[{"type":"text","text":"FlowViewProtocol is the protocol for the flow view"}]},"doc://flowkit.FlowKit/documentation/FlowKit":{"kind":"symbol","identifier":"doc:\/\/flowkit.FlowKit\/documentation\/FlowKit","title":"FlowKit","abstract":[],"role":"collection","type":"topic","url":"\/documentation\/flowkit"},"doc://flowkit.FlowKit/documentation/FlowKit/CoordinatorEvent":{"role":"symbol","identifier":"doc:\/\/flowkit.FlowKit\/documentation\/FlowKit\/CoordinatorEvent","abstract":[{"type":"codeVoice","code":"CoordinatorEvent"},{"type":"text","text":" defines the possible events that the "},{"type":"codeVoice","code":"Coordinator"},{"type":"text","text":" can handle."},{"type":"text","text":" "},{"type":"text","text":"These events are triggered by the flow or user interaction."}],"kind":"symbol","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"CoordinatorEvent","kind":"identifier"}],"title":"CoordinatorEvent","url":"\/documentation\/flowkit\/coordinatorevent","type":"topic","navigatorTitle":[{"kind":"identifier","text":"CoordinatorEvent"}]},"doc://flowkit.FlowKit/documentation/FlowKit/AsyncThrowingSubject":{"url":"\/documentation\/flowkit\/asyncthrowingsubject","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"AsyncThrowingSubject"}],"navigatorTitle":[{"text":"AsyncThrowingSubject","kind":"identifier"}],"type":"topic","title":"AsyncThrowingSubject","kind":"symbol","identifier":"doc:\/\/flowkit.FlowKit\/documentation\/FlowKit\/AsyncThrowingSubject","abstract":[{"text":"A subject that allows for asynchronously sending values or terminating with an error.","type":"text"},{"type":"text","text":" "},{"code":"AsyncThrowingSubject","type":"codeVoice"},{"type":"text","text":" acts as a bridge between imperative code and asynchronous code, enabling"},{"type":"text","text":" "},{"type":"text","text":"you to send values to an "},{"type":"codeVoice","code":"AsyncSequence"},{"text":" consumer while handling potential errors gracefully.","type":"text"}]},"doc://flowkit.FlowKit/documentation/FlowKit/FlowViewProtocol/events":{"required":true,"url":"\/documentation\/flowkit\/flowviewprotocol\/events","role":"symbol","identifier":"doc:\/\/flowkit.FlowKit\/documentation\/FlowKit\/FlowViewProtocol\/events","type":"topic","title":"events","kind":"symbol","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"events","kind":"identifier"},{"kind":"text","text":": "},{"text":"AsyncThrowingSubject","kind":"typeIdentifier","preciseIdentifier":"s:7FlowKit20AsyncThrowingSubjectV"},{"kind":"text","text":"<"},{"preciseIdentifier":"s:7FlowKit16CoordinatorEventO","text":"CoordinatorEvent","kind":"typeIdentifier"},{"text":">","kind":"text"}],"abstract":[{"text":"AsyncSequence for manage the events","type":"text"}]}}}