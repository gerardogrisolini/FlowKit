{"hierarchy":{"paths":[["doc:\/\/flowkit.FlowKit\/documentation\/FlowKit","doc:\/\/flowkit.FlowKit\/documentation\/FlowKit\/FlowViewProtocol"]]},"kind":"symbol","identifier":{"interfaceLanguage":"swift","url":"doc:\/\/flowkit.FlowKit\/documentation\/FlowKit\/FlowViewProtocol\/events"},"sections":[],"schemaVersion":{"minor":3,"patch":0,"major":0},"abstract":[{"text":"AsyncSequence for manage the events","type":"text"}],"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["iOS"],"tokens":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"events"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:7FlowKit20AsyncThrowingSubjectV","identifier":"doc:\/\/flowkit.FlowKit\/documentation\/FlowKit\/AsyncThrowingSubject","text":"AsyncThrowingSubject"},{"kind":"text","text":"<"},{"preciseIdentifier":"s:7FlowKit16CoordinatorEventO","text":"CoordinatorEvent","identifier":"doc:\/\/flowkit.FlowKit\/documentation\/FlowKit\/CoordinatorEvent","kind":"typeIdentifier"},{"kind":"text","text":"> { "},{"kind":"keyword","text":"get"},{"kind":"text","text":" }"}],"languages":["swift"]}]}],"variants":[{"paths":["\/documentation\/flowkit\/flowviewprotocol\/events"],"traits":[{"interfaceLanguage":"swift"}]}],"metadata":{"fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"events","kind":"identifier"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:7FlowKit20AsyncThrowingSubjectV","text":"AsyncThrowingSubject"},{"text":"<","kind":"text"},{"preciseIdentifier":"s:7FlowKit16CoordinatorEventO","kind":"typeIdentifier","text":"CoordinatorEvent"},{"kind":"text","text":">"}],"required":true,"title":"events","roleHeading":"Instance Property","symbolKind":"property","externalID":"s:7FlowKit0A12ViewProtocolP6eventsAA20AsyncThrowingSubjectVyAA16CoordinatorEventOGvp","role":"symbol","modules":[{"name":"FlowKit"}]},"references":{"doc://flowkit.FlowKit/documentation/FlowKit/FlowViewProtocol":{"navigatorTitle":[{"kind":"identifier","text":"FlowViewProtocol"}],"url":"\/documentation\/flowkit\/flowviewprotocol","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"FlowViewProtocol","kind":"identifier"}],"kind":"symbol","role":"symbol","identifier":"doc:\/\/flowkit.FlowKit\/documentation\/FlowKit\/FlowViewProtocol","abstract":[{"type":"text","text":"FlowViewProtocol is the protocol for the flow view"}],"title":"FlowViewProtocol","type":"topic"},"doc://flowkit.FlowKit/documentation/FlowKit":{"identifier":"doc:\/\/flowkit.FlowKit\/documentation\/FlowKit","type":"topic","kind":"symbol","title":"FlowKit","url":"\/documentation\/flowkit","abstract":[],"role":"collection"},"doc://flowkit.FlowKit/documentation/FlowKit/FlowViewProtocol/events":{"required":true,"fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"events"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7FlowKit20AsyncThrowingSubjectV","kind":"typeIdentifier","text":"AsyncThrowingSubject"},{"text":"<","kind":"text"},{"text":"CoordinatorEvent","preciseIdentifier":"s:7FlowKit16CoordinatorEventO","kind":"typeIdentifier"},{"text":">","kind":"text"}],"title":"events","kind":"symbol","role":"symbol","url":"\/documentation\/flowkit\/flowviewprotocol\/events","abstract":[{"text":"AsyncSequence for manage the events","type":"text"}],"type":"topic","identifier":"doc:\/\/flowkit.FlowKit\/documentation\/FlowKit\/FlowViewProtocol\/events"},"doc://flowkit.FlowKit/documentation/FlowKit/AsyncThrowingSubject":{"type":"topic","identifier":"doc:\/\/flowkit.FlowKit\/documentation\/FlowKit\/AsyncThrowingSubject","kind":"symbol","title":"AsyncThrowingSubject","navigatorTitle":[{"kind":"identifier","text":"AsyncThrowingSubject"}],"url":"\/documentation\/flowkit\/asyncthrowingsubject","role":"symbol","abstract":[{"text":"A subject that allows for asynchronously sending values or terminating with an error.","type":"text"},{"type":"text","text":" "},{"type":"codeVoice","code":"AsyncThrowingSubject"},{"text":" acts as a bridge between imperative code and asynchronous code, enabling","type":"text"},{"text":" ","type":"text"},{"text":"you to send values to an ","type":"text"},{"code":"AsyncSequence","type":"codeVoice"},{"type":"text","text":" consumer while handling potential errors gracefully."}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"AsyncThrowingSubject"}]},"doc://flowkit.FlowKit/documentation/FlowKit/CoordinatorEvent":{"fragments":[{"kind":"keyword","text":"enum"},{"text":" ","kind":"text"},{"kind":"identifier","text":"CoordinatorEvent"}],"role":"symbol","navigatorTitle":[{"text":"CoordinatorEvent","kind":"identifier"}],"url":"\/documentation\/flowkit\/coordinatorevent","type":"topic","identifier":"doc:\/\/flowkit.FlowKit\/documentation\/FlowKit\/CoordinatorEvent","title":"CoordinatorEvent","abstract":[{"type":"codeVoice","code":"CoordinatorEvent"},{"type":"text","text":" defines the possible events that the "},{"code":"Coordinator","type":"codeVoice"},{"type":"text","text":" can handle."},{"text":" ","type":"text"},{"type":"text","text":"These events are triggered by the flow or user interaction."}],"kind":"symbol"}}}