{"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/flowkit\/flowviewprotocol\/events"]}],"metadata":{"roleHeading":"Instance Property","symbolKind":"property","modules":[{"name":"FlowKit"}],"fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"events","kind":"identifier"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"AsyncThrowingSubject","preciseIdentifier":"s:7FlowKit20AsyncThrowingSubjectV"},{"text":"<","kind":"text"},{"text":"CoordinatorEvent","kind":"typeIdentifier","preciseIdentifier":"s:7FlowKit16CoordinatorEventO"},{"kind":"text","text":">"}],"required":true,"title":"events","externalID":"s:7FlowKit0A12ViewProtocolP6eventsAA20AsyncThrowingSubjectVyAA16CoordinatorEventOGvp","role":"symbol"},"abstract":[{"text":"AsyncSequence for manage the events","type":"text"}],"schemaVersion":{"patch":0,"major":0,"minor":3},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/flowkit.FlowKit\/documentation\/FlowKit\/FlowViewProtocol\/events"},"kind":"symbol","sections":[],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"events","kind":"identifier"},{"kind":"text","text":": "},{"text":"AsyncThrowingSubject","identifier":"doc:\/\/flowkit.FlowKit\/documentation\/FlowKit\/AsyncThrowingSubject","kind":"typeIdentifier","preciseIdentifier":"s:7FlowKit20AsyncThrowingSubjectV"},{"text":"<","kind":"text"},{"identifier":"doc:\/\/flowkit.FlowKit\/documentation\/FlowKit\/CoordinatorEvent","text":"CoordinatorEvent","preciseIdentifier":"s:7FlowKit16CoordinatorEventO","kind":"typeIdentifier"},{"text":"> { ","kind":"text"},{"kind":"keyword","text":"get"},{"text":" }","kind":"text"}],"platforms":["iOS"],"languages":["swift"]}]}],"hierarchy":{"paths":[["doc:\/\/flowkit.FlowKit\/documentation\/FlowKit","doc:\/\/flowkit.FlowKit\/documentation\/FlowKit\/FlowViewProtocol"]]},"references":{"doc://flowkit.FlowKit/documentation/FlowKit/FlowViewProtocol/events":{"url":"\/documentation\/flowkit\/flowviewprotocol\/events","required":true,"title":"events","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"kind":"identifier","text":"events"},{"text":": ","kind":"text"},{"text":"AsyncThrowingSubject","kind":"typeIdentifier","preciseIdentifier":"s:7FlowKit20AsyncThrowingSubjectV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","preciseIdentifier":"s:7FlowKit16CoordinatorEventO","text":"CoordinatorEvent"},{"kind":"text","text":">"}],"type":"topic","abstract":[{"type":"text","text":"AsyncSequence for manage the events"}],"identifier":"doc:\/\/flowkit.FlowKit\/documentation\/FlowKit\/FlowViewProtocol\/events","kind":"symbol","role":"symbol"},"doc://flowkit.FlowKit/documentation/FlowKit/FlowViewProtocol":{"navigatorTitle":[{"text":"FlowViewProtocol","kind":"identifier"}],"type":"topic","abstract":[{"text":"FlowViewProtocol is the protocol for the flow view","type":"text"}],"kind":"symbol","identifier":"doc:\/\/flowkit.FlowKit\/documentation\/FlowKit\/FlowViewProtocol","role":"symbol","title":"FlowViewProtocol","url":"\/documentation\/flowkit\/flowviewprotocol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"FlowViewProtocol"}]},"doc://flowkit.FlowKit/documentation/FlowKit":{"url":"\/documentation\/flowkit","identifier":"doc:\/\/flowkit.FlowKit\/documentation\/FlowKit","title":"FlowKit","kind":"symbol","role":"collection","abstract":[],"type":"topic"},"doc://flowkit.FlowKit/documentation/FlowKit/AsyncThrowingSubject":{"kind":"symbol","role":"symbol","identifier":"doc:\/\/flowkit.FlowKit\/documentation\/FlowKit\/AsyncThrowingSubject","title":"AsyncThrowingSubject","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"AsyncThrowingSubject"}],"url":"\/documentation\/flowkit\/asyncthrowingsubject","abstract":[{"type":"text","text":"A subject that allows for asynchronously sending values or terminating with an error."},{"type":"text","text":" "},{"code":"AsyncThrowingSubject","type":"codeVoice"},{"text":" acts as a bridge between imperative code and asynchronous code, enabling","type":"text"},{"text":" ","type":"text"},{"text":"you to send values to an ","type":"text"},{"type":"codeVoice","code":"AsyncSequence"},{"text":" consumer while handling potential errors gracefully.","type":"text"}],"type":"topic","navigatorTitle":[{"text":"AsyncThrowingSubject","kind":"identifier"}]},"doc://flowkit.FlowKit/documentation/FlowKit/CoordinatorEvent":{"url":"\/documentation\/flowkit\/coordinatorevent","fragments":[{"kind":"keyword","text":"enum"},{"text":" ","kind":"text"},{"kind":"identifier","text":"CoordinatorEvent"}],"abstract":[{"type":"codeVoice","code":"CoordinatorEvent"},{"type":"text","text":" defines the possible events that the "},{"type":"codeVoice","code":"Coordinator"},{"text":" can handle.","type":"text"},{"type":"text","text":" "},{"text":"These events are triggered by the flow or user interaction.","type":"text"}],"title":"CoordinatorEvent","type":"topic","kind":"symbol","navigatorTitle":[{"text":"CoordinatorEvent","kind":"identifier"}],"identifier":"doc:\/\/flowkit.FlowKit\/documentation\/FlowKit\/CoordinatorEvent","role":"symbol"}}}