{"sections":[],"schemaVersion":{"patch":0,"minor":3,"major":0},"metadata":{"roleHeading":"Class","symbolKind":"class","navigatorTitle":[{"kind":"identifier","text":"ResolverScopeShare"}],"modules":[{"name":"FlowKit"}],"role":"symbol","externalID":"s:8Resolver0A10ScopeShareC","title":"ResolverScopeShare","fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"text":"ResolverScopeShare","kind":"identifier"}]},"identifier":{"url":"doc:\/\/flowkit.FlowKit\/documentation\/FlowKit\/ResolverScopeShare","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Shared services persist while strong references to them exist. They’re then deallocated until the next resolve."}],"hierarchy":{"paths":[["doc:\/\/flowkit.FlowKit\/documentation\/FlowKit"]]},"topicSections":[{"title":"Initializers","identifiers":["doc:\/\/flowkit.FlowKit\/documentation\/FlowKit\/ResolverScopeShare\/init()"],"generated":true,"anchor":"Initializers"},{"anchor":"Instance-Methods","generated":true,"title":"Instance Methods","identifiers":["doc:\/\/flowkit.FlowKit\/documentation\/FlowKit\/ResolverScopeShare\/reset()","doc:\/\/flowkit.FlowKit\/documentation\/FlowKit\/ResolverScopeShare\/resolve(registration:resolver:args:)"]}],"relationshipsSections":[{"kind":"relationships","title":"Inherits From","identifiers":["doc:\/\/flowkit.FlowKit\/documentation\/FlowKit\/ResolverScope"],"type":"inheritsFrom"},{"identifiers":["doc:\/\/flowkit.FlowKit\/documentation\/FlowKit\/ResolverScopeType"],"title":"Conforms To","type":"conformsTo","kind":"relationships"}],"kind":"symbol","primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["iOS"],"languages":["swift"],"tokens":[{"text":"final","kind":"keyword"},{"text":" ","kind":"text"},{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ResolverScopeShare","kind":"identifier"}]}]}],"variants":[{"paths":["\/documentation\/flowkit\/resolverscopeshare"],"traits":[{"interfaceLanguage":"swift"}]}],"references":{"doc://flowkit.FlowKit/documentation/FlowKit/ResolverScopeShare":{"navigatorTitle":[{"kind":"identifier","text":"ResolverScopeShare"}],"title":"ResolverScopeShare","url":"\/documentation\/flowkit\/resolverscopeshare","role":"symbol","identifier":"doc:\/\/flowkit.FlowKit\/documentation\/FlowKit\/ResolverScopeShare","type":"topic","kind":"symbol","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"text":"ResolverScopeShare","kind":"identifier"}],"abstract":[{"text":"Shared services persist while strong references to them exist. They’re then deallocated until the next resolve.","type":"text"}]},"doc://flowkit.FlowKit/documentation/FlowKit/ResolverScopeShare/init()":{"type":"topic","title":"init()","fragments":[{"text":"init","kind":"identifier"},{"text":"()","kind":"text"}],"kind":"symbol","identifier":"doc:\/\/flowkit.FlowKit\/documentation\/FlowKit\/ResolverScopeShare\/init()","abstract":[],"url":"\/documentation\/flowkit\/resolverscopeshare\/init()","role":"symbol"},"doc://flowkit.FlowKit/documentation/FlowKit/ResolverScopeShare/reset()":{"kind":"symbol","type":"topic","url":"\/documentation\/flowkit\/resolverscopeshare\/reset()","abstract":[],"role":"symbol","title":"reset()","identifier":"doc:\/\/flowkit.FlowKit\/documentation\/FlowKit\/ResolverScopeShare\/reset()","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"reset"},{"text":"()","kind":"text"}]},"doc://flowkit.FlowKit/documentation/FlowKit/ResolverScopeType":{"identifier":"doc:\/\/flowkit.FlowKit\/documentation\/FlowKit\/ResolverScopeType","title":"ResolverScopeType","type":"topic","role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"ResolverScopeType"}],"kind":"symbol","navigatorTitle":[{"text":"ResolverScopeType","kind":"identifier"}],"abstract":[{"text":"Resolver scopes exist to control when resolution occurs and how resolved instances are cached. (If at all.)","type":"text"}],"url":"\/documentation\/flowkit\/resolverscopetype"},"doc://flowkit.FlowKit/documentation/FlowKit/ResolverScope":{"url":"\/documentation\/flowkit\/resolverscope","abstract":[],"role":"symbol","type":"topic","fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"ResolverScope"}],"title":"ResolverScope","kind":"symbol","navigatorTitle":[{"text":"ResolverScope","kind":"identifier"}],"identifier":"doc:\/\/flowkit.FlowKit\/documentation\/FlowKit\/ResolverScope"},"doc://flowkit.FlowKit/documentation/FlowKit/ResolverScopeShare/resolve(registration:resolver:args:)":{"role":"symbol","type":"topic","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"resolve"},{"text":"<","kind":"text"},{"text":"Service","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"registration","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:8Resolver0A12RegistrationC","kind":"typeIdentifier","text":"ResolverRegistration"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Service"},{"text":">, ","kind":"text"},{"kind":"externalParam","text":"resolver"},{"text":": ","kind":"text"},{"text":"Resolver","preciseIdentifier":"s:8ResolverAAC","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"externalParam","text":"args"},{"text":": ","kind":"text"},{"kind":"keyword","text":"Any"},{"text":"?) -> ","kind":"text"},{"text":"Service","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"url":"\/documentation\/flowkit\/resolverscopeshare\/resolve(registration:resolver:args:)","abstract":[{"type":"text","text":"Core scope resolution simply instantiates new instance every time it’s called (e.g. .unique)"}],"identifier":"doc:\/\/flowkit.FlowKit\/documentation\/FlowKit\/ResolverScopeShare\/resolve(registration:resolver:args:)","kind":"symbol","title":"resolve(registration:resolver:args:)"},"doc://flowkit.FlowKit/documentation/FlowKit":{"url":"\/documentation\/flowkit","role":"collection","title":"FlowKit","abstract":[],"kind":"symbol","type":"topic","identifier":"doc:\/\/flowkit.FlowKit\/documentation\/FlowKit"}}}