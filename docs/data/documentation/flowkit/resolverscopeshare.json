{"kind":"symbol","hierarchy":{"paths":[["doc:\/\/flowkit.FlowKit\/documentation\/FlowKit"]]},"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"platforms":["iOS"],"tokens":[{"kind":"keyword","text":"final"},{"text":" ","kind":"text"},{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ResolverScopeShare"}]}]}],"metadata":{"title":"ResolverScopeShare","symbolKind":"class","navigatorTitle":[{"text":"ResolverScopeShare","kind":"identifier"}],"roleHeading":"Class","fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ResolverScopeShare"}],"role":"symbol","modules":[{"name":"FlowKit"}],"externalID":"s:8Resolver0A10ScopeShareC"},"topicSections":[{"title":"Initializers","anchor":"Initializers","generated":true,"identifiers":["doc:\/\/flowkit.FlowKit\/documentation\/FlowKit\/ResolverScopeShare\/init()"]},{"generated":true,"title":"Instance Methods","identifiers":["doc:\/\/flowkit.FlowKit\/documentation\/FlowKit\/ResolverScopeShare\/reset()","doc:\/\/flowkit.FlowKit\/documentation\/FlowKit\/ResolverScopeShare\/resolve(registration:resolver:args:)"],"anchor":"Instance-Methods"}],"identifier":{"url":"doc:\/\/flowkit.FlowKit\/documentation\/FlowKit\/ResolverScopeShare","interfaceLanguage":"swift"},"schemaVersion":{"major":0,"minor":3,"patch":0},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/flowkit\/resolverscopeshare"]}],"sections":[],"abstract":[{"type":"text","text":"Shared services persist while strong references to them exist. They’re then deallocated until the next resolve."}],"relationshipsSections":[{"identifiers":["doc:\/\/flowkit.FlowKit\/documentation\/FlowKit\/ResolverScope"],"kind":"relationships","title":"Inherits From","type":"inheritsFrom"},{"identifiers":["doc:\/\/flowkit.FlowKit\/documentation\/FlowKit\/ResolverScopeType"],"title":"Conforms To","type":"conformsTo","kind":"relationships"}],"references":{"doc://flowkit.FlowKit/documentation/FlowKit/ResolverScopeType":{"identifier":"doc:\/\/flowkit.FlowKit\/documentation\/FlowKit\/ResolverScopeType","title":"ResolverScopeType","url":"\/documentation\/flowkit\/resolverscopetype","role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"ResolverScopeType","kind":"identifier"}],"navigatorTitle":[{"text":"ResolverScopeType","kind":"identifier"}],"type":"topic","abstract":[{"type":"text","text":"Resolver scopes exist to control when resolution occurs and how resolved instances are cached. (If at all.)"}],"kind":"symbol"},"doc://flowkit.FlowKit/documentation/FlowKit":{"url":"\/documentation\/flowkit","role":"collection","identifier":"doc:\/\/flowkit.FlowKit\/documentation\/FlowKit","abstract":[],"type":"topic","kind":"symbol","title":"FlowKit"},"doc://flowkit.FlowKit/documentation/FlowKit/ResolverScopeShare/reset()":{"kind":"symbol","url":"\/documentation\/flowkit\/resolverscopeshare\/reset()","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"reset","kind":"identifier"},{"text":"()","kind":"text"}],"type":"topic","identifier":"doc:\/\/flowkit.FlowKit\/documentation\/FlowKit\/ResolverScopeShare\/reset()","title":"reset()","abstract":[],"role":"symbol"},"doc://flowkit.FlowKit/documentation/FlowKit/ResolverScopeShare/resolve(registration:resolver:args:)":{"kind":"symbol","type":"topic","title":"resolve(registration:resolver:args:)","identifier":"doc:\/\/flowkit.FlowKit\/documentation\/FlowKit\/ResolverScopeShare\/resolve(registration:resolver:args:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"resolve"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Service"},{"kind":"text","text":">("},{"kind":"externalParam","text":"registration"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"ResolverRegistration","preciseIdentifier":"s:8Resolver0A12RegistrationC"},{"text":"<","kind":"text"},{"text":"Service","kind":"typeIdentifier"},{"text":">, ","kind":"text"},{"kind":"externalParam","text":"resolver"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:8ResolverAAC","text":"Resolver"},{"text":", ","kind":"text"},{"text":"args","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Any","kind":"keyword"},{"text":"?) -> ","kind":"text"},{"text":"Service","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"role":"symbol","url":"\/documentation\/flowkit\/resolverscopeshare\/resolve(registration:resolver:args:)","abstract":[{"type":"text","text":"Core scope resolution simply instantiates new instance every time it’s called (e.g. .unique)"}]},"doc://flowkit.FlowKit/documentation/FlowKit/ResolverScopeShare":{"kind":"symbol","role":"symbol","identifier":"doc:\/\/flowkit.FlowKit\/documentation\/FlowKit\/ResolverScopeShare","type":"topic","title":"ResolverScopeShare","fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"text":"ResolverScopeShare","kind":"identifier"}],"abstract":[{"type":"text","text":"Shared services persist while strong references to them exist. They’re then deallocated until the next resolve."}],"navigatorTitle":[{"text":"ResolverScopeShare","kind":"identifier"}],"url":"\/documentation\/flowkit\/resolverscopeshare"},"doc://flowkit.FlowKit/documentation/FlowKit/ResolverScope":{"identifier":"doc:\/\/flowkit.FlowKit\/documentation\/FlowKit\/ResolverScope","title":"ResolverScope","type":"topic","kind":"symbol","url":"\/documentation\/flowkit\/resolverscope","navigatorTitle":[{"kind":"identifier","text":"ResolverScope"}],"role":"symbol","abstract":[],"fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"text":"ResolverScope","kind":"identifier"}]},"doc://flowkit.FlowKit/documentation/FlowKit/ResolverScopeShare/init()":{"abstract":[],"kind":"symbol","url":"\/documentation\/flowkit\/resolverscopeshare\/init()","title":"init()","fragments":[{"text":"init","kind":"identifier"},{"text":"()","kind":"text"}],"identifier":"doc:\/\/flowkit.FlowKit\/documentation\/FlowKit\/ResolverScopeShare\/init()","type":"topic","role":"symbol"}}}